<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="614" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="597.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="597.00"> </text><svg id="frames" x="10" width="1180" total_samples="824"><g><title>clock_gettime (1 samples, 0.12%)</title><rect x="0.0000%" y="517" width="0.1214%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>futures_timer::native::heap::Heap&lt;T&gt;::remove (1 samples, 0.12%)</title><rect x="0.1214%" y="517" width="0.1214%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.3714%" y="527.50"></text></g><g><title>[anon] (4 samples, 0.49%)</title><rect x="0.0000%" y="533" width="0.4854%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4"/><text x="0.2500%" y="543.50"></text></g><g><title>syscall (2 samples, 0.24%)</title><rect x="0.2427%" y="517" width="0.2427%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="2"/><text x="0.4927%" y="527.50"></text></g><g><title>&lt;futures_timer::native::timer::Timer as core::future::future::Future&gt;::poll (4 samples, 0.49%)</title><rect x="1.0922%" y="405" width="0.4854%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="4"/><text x="1.3422%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.24%)</title><rect x="1.3350%" y="389" width="0.2427%" height="15" fill="rgb(232,128,0)" fg:x="11" fg:w="2"/><text x="1.5850%" y="399.50"></text></g><g><title>futures_task::waker::drop_arc_raw (2 samples, 0.24%)</title><rect x="1.3350%" y="373" width="0.2427%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="2"/><text x="1.5850%" y="383.50"></text></g><g><title>cfree (1 samples, 0.12%)</title><rect x="1.4563%" y="357" width="0.1214%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="1"/><text x="1.7063%" y="367.50"></text></g><g><title>futures_timer::native::heap::Heap&lt;T&gt;::remove (1 samples, 0.12%)</title><rect x="1.6990%" y="389" width="0.1214%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="1"/><text x="1.9490%" y="399.50"></text></g><g><title>futures_timer::native::timer::Timer::advance (5 samples, 0.61%)</title><rect x="1.5777%" y="405" width="0.6068%" height="15" fill="rgb(220,122,19)" fg:x="13" fg:w="5"/><text x="1.8277%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::now (3 samples, 0.36%)</title><rect x="1.8204%" y="389" width="0.3641%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="3"/><text x="2.0704%" y="399.50"></text></g><g><title>clock_gettime (3 samples, 0.36%)</title><rect x="1.8204%" y="373" width="0.3641%" height="15" fill="rgb(240,193,28)" fg:x="15" fg:w="3"/><text x="2.0704%" y="383.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.36%)</title><rect x="1.8204%" y="357" width="0.3641%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="3"/><text x="2.0704%" y="367.50"></text></g><g><title>std::sys::unix::time::Timespec::now (1 samples, 0.12%)</title><rect x="2.1845%" y="405" width="0.1214%" height="15" fill="rgb(206,188,39)" fg:x="18" fg:w="1"/><text x="2.4345%" y="415.50"></text></g><g><title>clock_gettime (1 samples, 0.12%)</title><rect x="2.1845%" y="389" width="0.1214%" height="15" fill="rgb(217,207,13)" fg:x="18" fg:w="1"/><text x="2.4345%" y="399.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.12%)</title><rect x="2.1845%" y="373" width="0.1214%" height="15" fill="rgb(231,73,38)" fg:x="18" fg:w="1"/><text x="2.4345%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::Thread&gt; (2 samples, 0.24%)</title><rect x="2.3058%" y="389" width="0.2427%" height="15" fill="rgb(225,20,46)" fg:x="19" fg:w="2"/><text x="2.5558%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt;&gt; (2 samples, 0.24%)</title><rect x="2.3058%" y="373" width="0.2427%" height="15" fill="rgb(210,31,41)" fg:x="19" fg:w="2"/><text x="2.5558%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt; (2 samples, 0.24%)</title><rect x="2.3058%" y="357" width="0.2427%" height="15" fill="rgb(221,200,47)" fg:x="19" fg:w="2"/><text x="2.5558%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.24%)</title><rect x="2.3058%" y="341" width="0.2427%" height="15" fill="rgb(226,26,5)" fg:x="19" fg:w="2"/><text x="2.5558%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.24%)</title><rect x="2.3058%" y="325" width="0.2427%" height="15" fill="rgb(249,33,26)" fg:x="19" fg:w="2"/><text x="2.5558%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.24%)</title><rect x="2.3058%" y="309" width="0.2427%" height="15" fill="rgb(235,183,28)" fg:x="19" fg:w="2"/><text x="2.5558%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (9 samples, 1.09%)</title><rect x="3.6408%" y="373" width="1.0922%" height="15" fill="rgb(221,5,38)" fg:x="30" fg:w="9"/><text x="3.8908%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (9 samples, 1.09%)</title><rect x="3.6408%" y="357" width="1.0922%" height="15" fill="rgb(247,18,42)" fg:x="30" fg:w="9"/><text x="3.8908%" y="367.50"></text></g><g><title>[libc.so.6] (49 samples, 5.95%)</title><rect x="0.4854%" y="533" width="5.9466%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="49"/><text x="0.7354%" y="543.50">[libc.so..</text></g><g><title>[libc.so.6] (49 samples, 5.95%)</title><rect x="0.4854%" y="517" width="5.9466%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="49"/><text x="0.7354%" y="527.50">[libc.so..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (49 samples, 5.95%)</title><rect x="0.4854%" y="501" width="5.9466%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="49"/><text x="0.7354%" y="511.50">std::sys..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (49 samples, 5.95%)</title><rect x="0.4854%" y="485" width="5.9466%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="49"/><text x="0.7354%" y="495.50">&lt;alloc::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (49 samples, 5.95%)</title><rect x="0.4854%" y="469" width="5.9466%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="49"/><text x="0.7354%" y="479.50">&lt;alloc::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (49 samples, 5.95%)</title><rect x="0.4854%" y="453" width="5.9466%" height="15" fill="rgb(232,36,49)" fg:x="4" fg:w="49"/><text x="0.7354%" y="463.50">core::op..</text></g><g><title>_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17h7227a5d028885381E.llvm.10080133933162240034 (49 samples, 5.95%)</title><rect x="0.4854%" y="437" width="5.9466%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="49"/><text x="0.7354%" y="447.50">_ZN3std1..</text></g><g><title>futures_timer::native::global::run (49 samples, 5.95%)</title><rect x="0.4854%" y="421" width="5.9466%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="49"/><text x="0.7354%" y="431.50">futures_..</text></g><g><title>std::thread::park_timeout (34 samples, 4.13%)</title><rect x="2.3058%" y="405" width="4.1262%" height="15" fill="rgb(213,181,19)" fg:x="19" fg:w="34"/><text x="2.5558%" y="415.50">std:..</text></g><g><title>std::sys_common::thread_parking::futex::Parker::park_timeout (32 samples, 3.88%)</title><rect x="2.5485%" y="389" width="3.8835%" height="15" fill="rgb(254,191,54)" fg:x="21" fg:w="32"/><text x="2.7985%" y="399.50">std:..</text></g><g><title>std::sys::unix::futex::futex_wait (14 samples, 1.70%)</title><rect x="4.7330%" y="373" width="1.6990%" height="15" fill="rgb(241,83,37)" fg:x="39" fg:w="14"/><text x="4.9830%" y="383.50"></text></g><g><title>syscall (5 samples, 0.61%)</title><rect x="5.8252%" y="357" width="0.6068%" height="15" fill="rgb(233,36,39)" fg:x="48" fg:w="5"/><text x="6.0752%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="6.3107%" y="341" width="0.1214%" height="15" fill="rgb(226,3,54)" fg:x="52" fg:w="1"/><text x="6.5607%" y="351.50"></text></g><g><title>&lt;futures_timer::native::timer::Timer as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="6.7961%" y="517" width="0.1214%" height="15" fill="rgb(245,192,40)" fg:x="56" fg:w="1"/><text x="7.0461%" y="527.50"></text></g><g><title>futures-timer (58 samples, 7.04%)</title><rect x="0.0000%" y="549" width="7.0388%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="58"/><text x="0.2500%" y="559.50">futures-t..</text></g><g><title>[unknown] (5 samples, 0.61%)</title><rect x="6.4320%" y="533" width="0.6068%" height="15" fill="rgb(232,182,51)" fg:x="53" fg:w="5"/><text x="6.6820%" y="543.50"></text></g><g><title>syscall (1 samples, 0.12%)</title><rect x="6.9175%" y="517" width="0.1214%" height="15" fill="rgb(231,60,39)" fg:x="57" fg:w="1"/><text x="7.1675%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.61%)</title><rect x="7.0388%" y="533" width="0.6068%" height="15" fill="rgb(208,69,12)" fg:x="58" fg:w="5"/><text x="7.2888%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.36%)</title><rect x="7.2816%" y="517" width="0.3641%" height="15" fill="rgb(235,93,37)" fg:x="60" fg:w="3"/><text x="7.5316%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.24%)</title><rect x="7.4029%" y="501" width="0.2427%" height="15" fill="rgb(213,116,39)" fg:x="61" fg:w="2"/><text x="7.6529%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.24%)</title><rect x="7.4029%" y="485" width="0.2427%" height="15" fill="rgb(222,207,29)" fg:x="61" fg:w="2"/><text x="7.6529%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.12%)</title><rect x="7.5243%" y="469" width="0.1214%" height="15" fill="rgb(206,96,30)" fg:x="62" fg:w="1"/><text x="7.7743%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.12%)</title><rect x="7.5243%" y="453" width="0.1214%" height="15" fill="rgb(218,138,4)" fg:x="62" fg:w="1"/><text x="7.7743%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.12%)</title><rect x="7.5243%" y="437" width="0.1214%" height="15" fill="rgb(250,191,14)" fg:x="62" fg:w="1"/><text x="7.7743%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.12%)</title><rect x="7.5243%" y="421" width="0.1214%" height="15" fill="rgb(239,60,40)" fg:x="62" fg:w="1"/><text x="7.7743%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.36%)</title><rect x="7.6456%" y="533" width="0.3641%" height="15" fill="rgb(206,27,48)" fg:x="63" fg:w="3"/><text x="7.8956%" y="543.50"></text></g><g><title>[libc.so.6] (2 samples, 0.24%)</title><rect x="7.7670%" y="517" width="0.2427%" height="15" fill="rgb(225,35,8)" fg:x="64" fg:w="2"/><text x="8.0170%" y="527.50"></text></g><g><title>onion-aad5c65c2 (11 samples, 1.33%)</title><rect x="7.0388%" y="549" width="1.3350%" height="15" fill="rgb(250,213,24)" fg:x="58" fg:w="11"/><text x="7.2888%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.36%)</title><rect x="8.0097%" y="533" width="0.3641%" height="15" fill="rgb(247,123,22)" fg:x="66" fg:w="3"/><text x="8.2597%" y="543.50"></text></g><g><title>[anon] (1 samples, 0.12%)</title><rect x="8.3738%" y="533" width="0.1214%" height="15" fill="rgb(231,138,38)" fg:x="69" fg:w="1"/><text x="8.6238%" y="543.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.12%)</title><rect x="8.3738%" y="517" width="0.1214%" height="15" fill="rgb(231,145,46)" fg:x="69" fg:w="1"/><text x="8.6238%" y="527.50"></text></g><g><title>__ctype_init (3 samples, 0.36%)</title><rect x="11.6505%" y="501" width="0.3641%" height="15" fill="rgb(251,118,11)" fg:x="96" fg:w="3"/><text x="11.9005%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.12%)</title><rect x="12.0146%" y="485" width="0.1214%" height="15" fill="rgb(217,147,25)" fg:x="99" fg:w="1"/><text x="12.2646%" y="495.50"></text></g><g><title>[libc.so.6] (32 samples, 3.88%)</title><rect x="8.4951%" y="533" width="3.8835%" height="15" fill="rgb(247,81,37)" fg:x="70" fg:w="32"/><text x="8.7451%" y="543.50">[lib..</text></g><g><title>[libc.so.6] (20 samples, 2.43%)</title><rect x="9.9515%" y="517" width="2.4272%" height="15" fill="rgb(209,12,38)" fg:x="82" fg:w="20"/><text x="10.2015%" y="527.50">[l..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 0.36%)</title><rect x="12.0146%" y="501" width="0.3641%" height="15" fill="rgb(227,1,9)" fg:x="99" fg:w="3"/><text x="12.2646%" y="511.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (2 samples, 0.24%)</title><rect x="12.1359%" y="485" width="0.2427%" height="15" fill="rgb(248,47,43)" fg:x="100" fg:w="2"/><text x="12.3859%" y="495.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.24%)</title><rect x="12.1359%" y="469" width="0.2427%" height="15" fill="rgb(221,10,30)" fg:x="100" fg:w="2"/><text x="12.3859%" y="479.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (2 samples, 0.24%)</title><rect x="12.1359%" y="453" width="0.2427%" height="15" fill="rgb(210,229,1)" fg:x="100" fg:w="2"/><text x="12.3859%" y="463.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (2 samples, 0.24%)</title><rect x="12.1359%" y="437" width="0.2427%" height="15" fill="rgb(222,148,37)" fg:x="100" fg:w="2"/><text x="12.3859%" y="447.50"></text></g><g><title>std::sys::unix::os::page_size (2 samples, 0.24%)</title><rect x="12.1359%" y="421" width="0.2427%" height="15" fill="rgb(234,67,33)" fg:x="100" fg:w="2"/><text x="12.3859%" y="431.50"></text></g><g><title>__sysconf (2 samples, 0.24%)</title><rect x="12.1359%" y="405" width="0.2427%" height="15" fill="rgb(247,98,35)" fg:x="100" fg:w="2"/><text x="12.3859%" y="415.50"></text></g><g><title>tests::settle_d (48 samples, 5.83%)</title><rect x="8.3738%" y="549" width="5.8252%" height="15" fill="rgb(247,138,52)" fg:x="69" fg:w="48"/><text x="8.6238%" y="559.50">tests::..</text></g><g><title>[unknown] (15 samples, 1.82%)</title><rect x="12.3786%" y="533" width="1.8204%" height="15" fill="rgb(213,79,30)" fg:x="102" fg:w="15"/><text x="12.6286%" y="543.50">[..</text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="14.0777%" y="517" width="0.1214%" height="15" fill="rgb(246,177,23)" fg:x="116" fg:w="1"/><text x="14.3277%" y="527.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (5 samples, 0.61%)</title><rect x="14.1990%" y="517" width="0.6068%" height="15" fill="rgb(230,62,27)" fg:x="117" fg:w="5"/><text x="14.4490%" y="527.50"></text></g><g><title>&lt;futures_timer::native::delay::Delay as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="14.8058%" y="517" width="0.1214%" height="15" fill="rgb(216,154,8)" fg:x="122" fg:w="1"/><text x="15.0558%" y="527.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="14.9272%" y="517" width="0.1214%" height="15" fill="rgb(244,35,45)" fg:x="123" fg:w="1"/><text x="15.1772%" y="527.50"></text></g><g><title>&lt;libp2p_kad::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::listen_protocol (1 samples, 0.12%)</title><rect x="15.0485%" y="517" width="0.1214%" height="15" fill="rgb(251,115,12)" fg:x="124" fg:w="1"/><text x="15.2985%" y="527.50"></text></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (1 samples, 0.12%)</title><rect x="15.1699%" y="517" width="0.1214%" height="15" fill="rgb(240,54,50)" fg:x="125" fg:w="1"/><text x="15.4199%" y="527.50"></text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::handshakestate::HandshakeState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (1 samples, 0.12%)</title><rect x="15.2913%" y="517" width="0.1214%" height="15" fill="rgb(233,84,52)" fg:x="126" fg:w="1"/><text x="15.5413%" y="527.50"></text></g><g><title>&lt;multistream_select::protocol::Protocol as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (1 samples, 0.12%)</title><rect x="15.4126%" y="517" width="0.1214%" height="15" fill="rgb(207,117,47)" fg:x="127" fg:w="1"/><text x="15.6626%" y="527.50"></text></g><g><title>&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::encrypt (1 samples, 0.12%)</title><rect x="15.5340%" y="517" width="0.1214%" height="15" fill="rgb(249,43,39)" fg:x="128" fg:w="1"/><text x="15.7840%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="15.6553%" y="517" width="0.1214%" height="15" fill="rgb(209,38,44)" fg:x="129" fg:w="1"/><text x="15.9053%" y="527.50"></text></g><g><title>_ZN71_$LT$std..hash..random..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h95e0d2b9383a2661E.llvm.16250749646611788190 (1 samples, 0.12%)</title><rect x="15.7767%" y="517" width="0.1214%" height="15" fill="rgb(236,212,23)" fg:x="130" fg:w="1"/><text x="16.0267%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;multistream_select::dialer_select::State&lt;libp2p_core::muxing::boxed::SubstreamBox,either::Either&lt;either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,libp2p_swarm::stream_protocol::StreamProtocol&gt;,either::Either&lt;libp2p_swarm::stream_protocol::StreamProtocol,libp2p_swarm::stream_protocol::StreamProtocol&gt;&gt;&gt;&gt; (1 samples, 0.12%)</title><rect x="15.8981%" y="517" width="0.1214%" height="15" fill="rgb(242,79,21)" fg:x="131" fg:w="1"/><text x="16.1481%" y="527.50"></text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (1 samples, 0.12%)</title><rect x="16.0194%" y="517" width="0.1214%" height="15" fill="rgb(211,96,35)" fg:x="132" fg:w="1"/><text x="16.2694%" y="527.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1 samples, 0.12%)</title><rect x="16.1408%" y="517" width="0.1214%" height="15" fill="rgb(253,215,40)" fg:x="133" fg:w="1"/><text x="16.3908%" y="527.50"></text></g><g><title>multiaddr::protocol::Protocol::from_bytes (1 samples, 0.12%)</title><rect x="16.2621%" y="517" width="0.1214%" height="15" fill="rgb(211,81,21)" fg:x="134" fg:w="1"/><text x="16.5121%" y="527.50"></text></g><g><title>snow::builder::Builder::build (1 samples, 0.12%)</title><rect x="16.3835%" y="517" width="0.1214%" height="15" fill="rgb(208,190,38)" fg:x="135" fg:w="1"/><text x="16.6335%" y="527.50"></text></g><g><title>syscall (1 samples, 0.12%)</title><rect x="16.5049%" y="517" width="0.1214%" height="15" fill="rgb(235,213,38)" fg:x="136" fg:w="1"/><text x="16.7549%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (2 samples, 0.24%)</title><rect x="16.6262%" y="517" width="0.2427%" height="15" fill="rgb(237,122,38)" fg:x="137" fg:w="2"/><text x="16.8762%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1 samples, 0.12%)</title><rect x="16.8689%" y="517" width="0.1214%" height="15" fill="rgb(244,218,35)" fg:x="139" fg:w="1"/><text x="17.1189%" y="527.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.12%)</title><rect x="16.9903%" y="517" width="0.1214%" height="15" fill="rgb(240,68,47)" fg:x="140" fg:w="1"/><text x="17.2403%" y="527.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::remove (1 samples, 0.12%)</title><rect x="17.1117%" y="517" width="0.1214%" height="15" fill="rgb(210,16,53)" fg:x="141" fg:w="1"/><text x="17.3617%" y="527.50"></text></g><g><title>yamux::connection::rtt::Rtt::next_ping (1 samples, 0.12%)</title><rect x="17.2330%" y="517" width="0.1214%" height="15" fill="rgb(235,124,12)" fg:x="142" fg:w="1"/><text x="17.4830%" y="527.50"></text></g><g><title>[anon] (27 samples, 3.28%)</title><rect x="14.1990%" y="533" width="3.2767%" height="15" fill="rgb(224,169,11)" fg:x="117" fg:w="27"/><text x="14.4490%" y="543.50">[an..</text></g><g><title>yamux::connection::stream::Stream::send_window_update (1 samples, 0.12%)</title><rect x="17.3544%" y="517" width="0.1214%" height="15" fill="rgb(250,166,2)" fg:x="143" fg:w="1"/><text x="17.6044%" y="527.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::fill_bytes (1 samples, 0.12%)</title><rect x="17.4757%" y="517" width="0.1214%" height="15" fill="rgb(242,216,29)" fg:x="144" fg:w="1"/><text x="17.7257%" y="527.50"></text></g><g><title>std::io::stdio::set_output_capture (1 samples, 0.12%)</title><rect x="17.5971%" y="437" width="0.1214%" height="15" fill="rgb(230,116,27)" fg:x="145" fg:w="1"/><text x="17.8471%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.12%)</title><rect x="17.5971%" y="421" width="0.1214%" height="15" fill="rgb(228,99,48)" fg:x="145" fg:w="1"/><text x="17.8471%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.12%)</title><rect x="17.5971%" y="405" width="0.1214%" height="15" fill="rgb(253,11,6)" fg:x="145" fg:w="1"/><text x="17.8471%" y="415.50"></text></g><g><title>std::io::stdio::OUTPUT_CAPTURE::__getit (1 samples, 0.12%)</title><rect x="17.5971%" y="389" width="0.1214%" height="15" fill="rgb(247,143,39)" fg:x="145" fg:w="1"/><text x="17.8471%" y="399.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.12%)</title><rect x="17.5971%" y="373" width="0.1214%" height="15" fill="rgb(236,97,10)" fg:x="145" fg:w="1"/><text x="17.8471%" y="383.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.12%)</title><rect x="17.5971%" y="357" width="0.1214%" height="15" fill="rgb(233,208,19)" fg:x="145" fg:w="1"/><text x="17.8471%" y="367.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_register_dtor (1 samples, 0.12%)</title><rect x="17.5971%" y="341" width="0.1214%" height="15" fill="rgb(216,164,2)" fg:x="145" fg:w="1"/><text x="17.8471%" y="351.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.12%)</title><rect x="17.5971%" y="325" width="0.1214%" height="15" fill="rgb(220,129,5)" fg:x="145" fg:w="1"/><text x="17.8471%" y="335.50"></text></g><g><title>__libc_calloc (1 samples, 0.12%)</title><rect x="17.5971%" y="309" width="0.1214%" height="15" fill="rgb(242,17,10)" fg:x="145" fg:w="1"/><text x="17.8471%" y="319.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.12%)</title><rect x="17.7184%" y="437" width="0.1214%" height="15" fill="rgb(242,107,0)" fg:x="146" fg:w="1"/><text x="17.9684%" y="447.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.12%)</title><rect x="17.7184%" y="421" width="0.1214%" height="15" fill="rgb(251,28,31)" fg:x="146" fg:w="1"/><text x="17.9684%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.12%)</title><rect x="17.9612%" y="389" width="0.1214%" height="15" fill="rgb(233,223,10)" fg:x="148" fg:w="1"/><text x="18.2112%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.12%)</title><rect x="17.9612%" y="373" width="0.1214%" height="15" fill="rgb(215,21,27)" fg:x="148" fg:w="1"/><text x="18.2112%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.24%)</title><rect x="18.4466%" y="373" width="0.2427%" height="15" fill="rgb(232,23,21)" fg:x="152" fg:w="2"/><text x="18.6966%" y="383.50"></text></g><g><title>std::sys::unix::futex::futex_wait (7 samples, 0.85%)</title><rect x="18.0825%" y="389" width="0.8495%" height="15" fill="rgb(244,5,23)" fg:x="149" fg:w="7"/><text x="18.3325%" y="399.50"></text></g><g><title>syscall (2 samples, 0.24%)</title><rect x="18.6893%" y="373" width="0.2427%" height="15" fill="rgb(226,81,46)" fg:x="154" fg:w="2"/><text x="18.9393%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (13 samples, 1.58%)</title><rect x="17.9612%" y="405" width="1.5777%" height="15" fill="rgb(247,70,30)" fg:x="148" fg:w="13"/><text x="18.2112%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (5 samples, 0.61%)</title><rect x="18.9320%" y="389" width="0.6068%" height="15" fill="rgb(212,68,19)" fg:x="156" fg:w="5"/><text x="19.1820%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (4 samples, 0.49%)</title><rect x="19.0534%" y="373" width="0.4854%" height="15" fill="rgb(240,187,13)" fg:x="157" fg:w="4"/><text x="19.3034%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.49%)</title><rect x="19.0534%" y="357" width="0.4854%" height="15" fill="rgb(223,113,26)" fg:x="157" fg:w="4"/><text x="19.3034%" y="367.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.12%)</title><rect x="20.0243%" y="293" width="0.1214%" height="15" fill="rgb(206,192,2)" fg:x="165" fg:w="1"/><text x="20.2743%" y="303.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.12%)</title><rect x="20.0243%" y="277" width="0.1214%" height="15" fill="rgb(241,108,4)" fg:x="165" fg:w="1"/><text x="20.2743%" y="287.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.12%)</title><rect x="20.0243%" y="261" width="0.1214%" height="15" fill="rgb(247,173,49)" fg:x="165" fg:w="1"/><text x="20.2743%" y="271.50"></text></g><g><title>std::sys::unix::time::Instant::checked_sub_instant (1 samples, 0.12%)</title><rect x="20.0243%" y="245" width="0.1214%" height="15" fill="rgb(224,114,35)" fg:x="165" fg:w="1"/><text x="20.2743%" y="255.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.12%)</title><rect x="20.0243%" y="229" width="0.1214%" height="15" fill="rgb(245,159,27)" fg:x="165" fg:w="1"/><text x="20.2743%" y="239.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.12%)</title><rect x="20.0243%" y="213" width="0.1214%" height="15" fill="rgb(245,172,44)" fg:x="165" fg:w="1"/><text x="20.2743%" y="223.50"></text></g><g><title>std::sys::unix::time::Timespec::now (2 samples, 0.24%)</title><rect x="20.1456%" y="293" width="0.2427%" height="15" fill="rgb(236,23,11)" fg:x="166" fg:w="2"/><text x="20.3956%" y="303.50"></text></g><g><title>clock_gettime (2 samples, 0.24%)</title><rect x="20.1456%" y="277" width="0.2427%" height="15" fill="rgb(205,117,38)" fg:x="166" fg:w="2"/><text x="20.3956%" y="287.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.12%)</title><rect x="20.3883%" y="293" width="0.1214%" height="15" fill="rgb(237,72,25)" fg:x="168" fg:w="1"/><text x="20.6383%" y="303.50"></text></g><g><title>std::sys::unix::time::Instant::now (1 samples, 0.12%)</title><rect x="20.3883%" y="277" width="0.1214%" height="15" fill="rgb(244,70,9)" fg:x="168" fg:w="1"/><text x="20.6383%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (13 samples, 1.58%)</title><rect x="20.5097%" y="293" width="1.5777%" height="15" fill="rgb(217,125,39)" fg:x="169" fg:w="13"/><text x="20.7597%" y="303.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (1 samples, 0.12%)</title><rect x="22.0874%" y="293" width="0.1214%" height="15" fill="rgb(235,36,10)" fg:x="182" fg:w="1"/><text x="22.3374%" y="303.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (14 samples, 1.70%)</title><rect x="30.4612%" y="229" width="1.6990%" height="15" fill="rgb(251,123,47)" fg:x="251" fg:w="14"/><text x="30.7112%" y="239.50"></text></g><g><title>epoll_wait (12 samples, 1.46%)</title><rect x="30.7039%" y="213" width="1.4563%" height="15" fill="rgb(221,13,13)" fg:x="253" fg:w="12"/><text x="30.9539%" y="223.50"></text></g><g><title>[libc.so.6] (10 samples, 1.21%)</title><rect x="30.9466%" y="197" width="1.2136%" height="15" fill="rgb(238,131,9)" fg:x="255" fg:w="10"/><text x="31.1966%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (1 samples, 0.12%)</title><rect x="32.1602%" y="213" width="0.1214%" height="15" fill="rgb(211,50,8)" fg:x="265" fg:w="1"/><text x="32.4102%" y="223.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (1 samples, 0.12%)</title><rect x="32.1602%" y="197" width="0.1214%" height="15" fill="rgb(245,182,24)" fg:x="265" fg:w="1"/><text x="32.4102%" y="207.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.12%)</title><rect x="32.1602%" y="181" width="0.1214%" height="15" fill="rgb(242,14,37)" fg:x="265" fg:w="1"/><text x="32.4102%" y="191.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.12%)</title><rect x="32.1602%" y="165" width="0.1214%" height="15" fill="rgb(246,228,12)" fg:x="265" fg:w="1"/><text x="32.4102%" y="175.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1 samples, 0.12%)</title><rect x="32.1602%" y="149" width="0.1214%" height="15" fill="rgb(213,55,15)" fg:x="265" fg:w="1"/><text x="32.4102%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.12%)</title><rect x="32.1602%" y="133" width="0.1214%" height="15" fill="rgb(209,9,3)" fg:x="265" fg:w="1"/><text x="32.4102%" y="143.50"></text></g><g><title>_ZN5tokio7runtime2io6driver6Driver4turn17h9c7f8a2cd61440f7E.llvm.1871064024184203469 (17 samples, 2.06%)</title><rect x="30.3398%" y="245" width="2.0631%" height="15" fill="rgb(230,59,30)" fg:x="250" fg:w="17"/><text x="30.5898%" y="255.50">_..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (2 samples, 0.24%)</title><rect x="32.1602%" y="229" width="0.2427%" height="15" fill="rgb(209,121,21)" fg:x="265" fg:w="2"/><text x="32.4102%" y="239.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.12%)</title><rect x="32.2816%" y="213" width="0.1214%" height="15" fill="rgb(220,109,13)" fg:x="266" fg:w="1"/><text x="32.5316%" y="223.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.12%)</title><rect x="32.2816%" y="197" width="0.1214%" height="15" fill="rgb(232,18,1)" fg:x="266" fg:w="1"/><text x="32.5316%" y="207.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17hbbf06b9f73b6cd1bE.llvm.17073567277356765837 (20 samples, 2.43%)</title><rect x="30.2184%" y="261" width="2.4272%" height="15" fill="rgb(215,41,42)" fg:x="249" fg:w="20"/><text x="30.4684%" y="271.50">_Z..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (2 samples, 0.24%)</title><rect x="32.4029%" y="245" width="0.2427%" height="15" fill="rgb(224,123,36)" fg:x="267" fg:w="2"/><text x="32.6529%" y="255.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (2 samples, 0.24%)</title><rect x="32.4029%" y="229" width="0.2427%" height="15" fill="rgb(240,125,3)" fg:x="267" fg:w="2"/><text x="32.6529%" y="239.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h884e52e322d4f93dE.llvm.6190752214243895883 (1 samples, 0.12%)</title><rect x="32.5243%" y="213" width="0.1214%" height="15" fill="rgb(205,98,50)" fg:x="268" fg:w="1"/><text x="32.7743%" y="223.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (1 samples, 0.12%)</title><rect x="36.2864%" y="213" width="0.1214%" height="15" fill="rgb(205,185,37)" fg:x="299" fg:w="1"/><text x="36.5364%" y="223.50"></text></g><g><title>std::sys::unix::futex::futex_wait (50 samples, 6.07%)</title><rect x="32.6456%" y="229" width="6.0680%" height="15" fill="rgb(238,207,15)" fg:x="269" fg:w="50"/><text x="32.8956%" y="239.50">std::sys..</text></g><g><title>syscall (19 samples, 2.31%)</title><rect x="36.4078%" y="213" width="2.3058%" height="15" fill="rgb(213,199,42)" fg:x="300" fg:w="19"/><text x="36.6578%" y="223.50">s..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (169 samples, 20.51%)</title><rect x="22.2087%" y="293" width="20.5097%" height="15" fill="rgb(235,201,11)" fg:x="183" fg:w="169"/><text x="22.4587%" y="303.50">tokio::runtime::scheduler::multi..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (163 samples, 19.78%)</title><rect x="22.9369%" y="277" width="19.7816%" height="15" fill="rgb(207,46,11)" fg:x="189" fg:w="163"/><text x="23.1869%" y="287.50">tokio::runtime::scheduler::mult..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (83 samples, 10.07%)</title><rect x="32.6456%" y="261" width="10.0728%" height="15" fill="rgb(241,35,35)" fg:x="269" fg:w="83"/><text x="32.8956%" y="271.50">std::sys::unix:..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (83 samples, 10.07%)</title><rect x="32.6456%" y="245" width="10.0728%" height="15" fill="rgb(243,32,47)" fg:x="269" fg:w="83"/><text x="32.8956%" y="255.50">std::sys::unix:..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (33 samples, 4.00%)</title><rect x="38.7136%" y="229" width="4.0049%" height="15" fill="rgb(247,202,23)" fg:x="319" fg:w="33"/><text x="38.9636%" y="239.50">std:..</text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (33 samples, 4.00%)</title><rect x="38.7136%" y="213" width="4.0049%" height="15" fill="rgb(219,102,11)" fg:x="319" fg:w="33"/><text x="38.9636%" y="223.50">core..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 4.00%)</title><rect x="38.7136%" y="197" width="4.0049%" height="15" fill="rgb(243,110,44)" fg:x="319" fg:w="33"/><text x="38.9636%" y="207.50">core..</text></g><g><title>_ZN5tokio7runtime9scheduler12multi_thread4park8Unparker6unpark17h2dbacfbe16905bbdE.llvm.17757036233579673584 (2 samples, 0.24%)</title><rect x="42.9612%" y="277" width="0.2427%" height="15" fill="rgb(222,74,54)" fg:x="354" fg:w="2"/><text x="43.2112%" y="287.50"></text></g><g><title>syscall (1 samples, 0.12%)</title><rect x="43.2039%" y="277" width="0.1214%" height="15" fill="rgb(216,99,12)" fg:x="356" fg:w="1"/><text x="43.4539%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.12%)</title><rect x="43.3252%" y="277" width="0.1214%" height="15" fill="rgb(226,22,26)" fg:x="357" fg:w="1"/><text x="43.5752%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (1 samples, 0.12%)</title><rect x="43.6893%" y="261" width="0.1214%" height="15" fill="rgb(217,163,10)" fg:x="360" fg:w="1"/><text x="43.9393%" y="271.50"></text></g><g><title>&lt;multistream_select::protocol::MessageIO&lt;R&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="44.1748%" y="69" width="0.1214%" height="15" fill="rgb(213,25,53)" fg:x="364" fg:w="1"/><text x="44.4248%" y="79.50"></text></g><g><title>&lt;multistream_select::length_delimited::LengthDelimited&lt;R&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="44.1748%" y="53" width="0.1214%" height="15" fill="rgb(252,105,26)" fg:x="364" fg:w="1"/><text x="44.4248%" y="63.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_off (1 samples, 0.12%)</title><rect x="44.1748%" y="37" width="0.1214%" height="15" fill="rgb(220,39,43)" fg:x="364" fg:w="1"/><text x="44.4248%" y="47.50"></text></g><g><title>&lt;libp2p_swarm::connection::pool::concurrent_dial::ConcurrentDial as core::future::future::Future&gt;::poll (3 samples, 0.36%)</title><rect x="44.0534%" y="229" width="0.3641%" height="15" fill="rgb(229,68,48)" fg:x="363" fg:w="3"/><text x="44.3034%" y="239.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (3 samples, 0.36%)</title><rect x="44.0534%" y="213" width="0.3641%" height="15" fill="rgb(252,8,32)" fg:x="363" fg:w="3"/><text x="44.3034%" y="223.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.36%)</title><rect x="44.0534%" y="197" width="0.3641%" height="15" fill="rgb(223,20,43)" fg:x="363" fg:w="3"/><text x="44.3034%" y="207.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.36%)</title><rect x="44.0534%" y="181" width="0.3641%" height="15" fill="rgb(229,81,49)" fg:x="363" fg:w="3"/><text x="44.3034%" y="191.50"></text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.36%)</title><rect x="44.0534%" y="165" width="0.3641%" height="15" fill="rgb(236,28,36)" fg:x="363" fg:w="3"/><text x="44.3034%" y="175.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.36%)</title><rect x="44.0534%" y="149" width="0.3641%" height="15" fill="rgb(249,185,26)" fg:x="363" fg:w="3"/><text x="44.3034%" y="159.50"></text></g><g><title>&lt;libp2p_core::transport::map::MapFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.36%)</title><rect x="44.0534%" y="133" width="0.3641%" height="15" fill="rgb(249,174,33)" fg:x="363" fg:w="3"/><text x="44.3034%" y="143.50"></text></g><g><title>&lt;libp2p_core::transport::and_then::AndThenFuture&lt;TFut,TMap,TMapOut&gt; as core::future::future::Future&gt;::poll (3 samples, 0.36%)</title><rect x="44.0534%" y="117" width="0.3641%" height="15" fill="rgb(233,201,37)" fg:x="363" fg:w="3"/><text x="44.3034%" y="127.50"></text></g><g><title>&lt;libp2p_core::upgrade::apply::OutboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (3 samples, 0.36%)</title><rect x="44.0534%" y="101" width="0.3641%" height="15" fill="rgb(221,78,26)" fg:x="363" fg:w="3"/><text x="44.3034%" y="111.50"></text></g><g><title>&lt;multistream_select::dialer_select::DialerSelectFuture&lt;R,I&gt; as core::future::future::Future&gt;::poll (3 samples, 0.36%)</title><rect x="44.0534%" y="85" width="0.3641%" height="15" fill="rgb(250,127,30)" fg:x="363" fg:w="3"/><text x="44.3034%" y="95.50"></text></g><g><title>&lt;multistream_select::protocol::MessageIO&lt;R&gt; as futures_sink::Sink&lt;multistream_select::protocol::Message&gt;&gt;::start_send (1 samples, 0.12%)</title><rect x="44.2961%" y="69" width="0.1214%" height="15" fill="rgb(230,49,44)" fg:x="365" fg:w="1"/><text x="44.5461%" y="79.50"></text></g><g><title>multistream_select::protocol::Message::encode (1 samples, 0.12%)</title><rect x="44.2961%" y="53" width="0.1214%" height="15" fill="rgb(229,67,23)" fg:x="365" fg:w="1"/><text x="44.5461%" y="63.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.12%)</title><rect x="44.2961%" y="37" width="0.1214%" height="15" fill="rgb(249,83,47)" fg:x="365" fg:w="1"/><text x="44.5461%" y="47.50"></text></g><g><title>_ZN91_$LT$tracing..instrument..Instrumented$LT$T$GT$$u20$as$u20$core..future..future..Future$GT$4poll17hd56d98ec53565831E.llvm.17216950514258637072 (4 samples, 0.49%)</title><rect x="44.0534%" y="245" width="0.4854%" height="15" fill="rgb(215,43,3)" fg:x="363" fg:w="4"/><text x="44.3034%" y="255.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.12%)</title><rect x="44.4175%" y="229" width="0.1214%" height="15" fill="rgb(238,154,13)" fg:x="366" fg:w="1"/><text x="44.6675%" y="239.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (16 samples, 1.94%)</title><rect x="42.7184%" y="293" width="1.9417%" height="15" fill="rgb(219,56,2)" fg:x="352" fg:w="16"/><text x="42.9684%" y="303.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (10 samples, 1.21%)</title><rect x="43.4466%" y="277" width="1.2136%" height="15" fill="rgb(233,0,4)" fg:x="358" fg:w="10"/><text x="43.6966%" y="287.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (7 samples, 0.85%)</title><rect x="43.8107%" y="261" width="0.8495%" height="15" fill="rgb(235,30,7)" fg:x="361" fg:w="7"/><text x="44.0607%" y="271.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.12%)</title><rect x="44.5388%" y="245" width="0.1214%" height="15" fill="rgb(250,79,13)" fg:x="367" fg:w="1"/><text x="44.7888%" y="255.50"></text></g><g><title>[libc.so.6] (225 samples, 27.31%)</title><rect x="17.5971%" y="517" width="27.3058%" height="15" fill="rgb(211,146,34)" fg:x="145" fg:w="225"/><text x="17.8471%" y="527.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (225 samples, 27.31%)</title><rect x="17.5971%" y="501" width="27.3058%" height="15" fill="rgb(228,22,38)" fg:x="145" fg:w="225"/><text x="17.8471%" y="511.50">std::sys::unix::thread::Thread::new::thread_..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (225 samples, 27.31%)</title><rect x="17.5971%" y="485" width="27.3058%" height="15" fill="rgb(235,168,5)" fg:x="145" fg:w="225"/><text x="17.8471%" y="495.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::functi..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (225 samples, 27.31%)</title><rect x="17.5971%" y="469" width="27.3058%" height="15" fill="rgb(221,155,16)" fg:x="145" fg:w="225"/><text x="17.8471%" y="479.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::functi..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (225 samples, 27.31%)</title><rect x="17.5971%" y="453" width="27.3058%" height="15" fill="rgb(215,215,53)" fg:x="145" fg:w="225"/><text x="17.8471%" y="463.50">core::ops::function::FnOnce::call_once{{vtab..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (223 samples, 27.06%)</title><rect x="17.8398%" y="437" width="27.0631%" height="15" fill="rgb(223,4,10)" fg:x="147" fg:w="223"/><text x="18.0898%" y="447.50">std::sys_common::backtrace::__rust_begin_sh..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (223 samples, 27.06%)</title><rect x="17.8398%" y="421" width="27.0631%" height="15" fill="rgb(234,103,6)" fg:x="147" fg:w="223"/><text x="18.0898%" y="431.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (209 samples, 25.36%)</title><rect x="19.5388%" y="405" width="25.3641%" height="15" fill="rgb(227,97,0)" fg:x="161" fg:w="209"/><text x="19.7888%" y="415.50">tokio::runtime::task::harness::Harness&lt;T..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (209 samples, 25.36%)</title><rect x="19.5388%" y="389" width="25.3641%" height="15" fill="rgb(234,150,53)" fg:x="161" fg:w="209"/><text x="19.7888%" y="399.50">tokio::runtime::task::core::Core&lt;T,S&gt;::p..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (209 samples, 25.36%)</title><rect x="19.5388%" y="373" width="25.3641%" height="15" fill="rgb(228,201,54)" fg:x="161" fg:w="209"/><text x="19.7888%" y="383.50">&lt;tokio::runtime::blocking::task::Blockin..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (209 samples, 25.36%)</title><rect x="19.5388%" y="357" width="25.3641%" height="15" fill="rgb(222,22,37)" fg:x="161" fg:w="209"/><text x="19.7888%" y="367.50">tokio::runtime::scheduler::multi_thread:..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (209 samples, 25.36%)</title><rect x="19.5388%" y="341" width="25.3641%" height="15" fill="rgb(237,53,32)" fg:x="161" fg:w="209"/><text x="19.7888%" y="351.50">tokio::runtime::context::runtime::enter_..</text></g><g><title>tokio::runtime::context::set_scheduler (209 samples, 25.36%)</title><rect x="19.5388%" y="325" width="25.3641%" height="15" fill="rgb(233,25,53)" fg:x="161" fg:w="209"/><text x="19.7888%" y="335.50">tokio::runtime::context::set_scheduler</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (209 samples, 25.36%)</title><rect x="19.5388%" y="309" width="25.3641%" height="15" fill="rgb(210,40,34)" fg:x="161" fg:w="209"/><text x="19.7888%" y="319.50">tokio::runtime::scheduler::multi_thread:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (2 samples, 0.24%)</title><rect x="44.6602%" y="293" width="0.2427%" height="15" fill="rgb(241,220,44)" fg:x="368" fg:w="2"/><text x="44.9102%" y="303.50"></text></g><g><title>[libc.so.6] (227 samples, 27.55%)</title><rect x="17.4757%" y="533" width="27.5485%" height="15" fill="rgb(235,28,35)" fg:x="144" fg:w="227"/><text x="17.7257%" y="543.50">[libc.so.6]</text></g><g><title>snow::builder::Builder::build (1 samples, 0.12%)</title><rect x="44.9029%" y="517" width="0.1214%" height="15" fill="rgb(210,56,17)" fg:x="370" fg:w="1"/><text x="45.1529%" y="527.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (4 samples, 0.49%)</title><rect x="47.0874%" y="517" width="0.4854%" height="15" fill="rgb(224,130,29)" fg:x="388" fg:w="4"/><text x="47.3374%" y="527.50"></text></g><g><title>&lt;T as libp2p_swarm::upgrade::OutboundUpgradeSend&gt;::upgrade_outbound (1 samples, 0.12%)</title><rect x="47.5728%" y="517" width="0.1214%" height="15" fill="rgb(235,212,8)" fg:x="392" fg:w="1"/><text x="47.8228%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="47.5728%" y="501" width="0.1214%" height="15" fill="rgb(223,33,50)" fg:x="392" fg:w="1"/><text x="47.8228%" y="511.50"></text></g><g><title>&lt;crypto::enc::KeyPair as core::default::Default&gt;::default (1 samples, 0.12%)</title><rect x="47.6942%" y="517" width="0.1214%" height="15" fill="rgb(219,149,13)" fg:x="393" fg:w="1"/><text x="47.9442%" y="527.50"></text></g><g><title>pqc_kyber::kem::crypto_kem_keypair (1 samples, 0.12%)</title><rect x="47.6942%" y="501" width="0.1214%" height="15" fill="rgb(250,156,29)" fg:x="393" fg:w="1"/><text x="47.9442%" y="511.50"></text></g><g><title>pqc_kyber::reference::indcpa::gen_matrix (1 samples, 0.12%)</title><rect x="47.6942%" y="485" width="0.1214%" height="15" fill="rgb(216,193,19)" fg:x="393" fg:w="1"/><text x="47.9442%" y="495.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (1 samples, 0.12%)</title><rect x="47.9369%" y="357" width="0.1214%" height="15" fill="rgb(216,135,14)" fg:x="395" fg:w="1"/><text x="48.1869%" y="367.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.12%)</title><rect x="47.9369%" y="341" width="0.1214%" height="15" fill="rgb(241,47,5)" fg:x="395" fg:w="1"/><text x="48.1869%" y="351.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (19 samples, 2.31%)</title><rect x="48.7864%" y="341" width="2.3058%" height="15" fill="rgb(233,42,35)" fg:x="402" fg:w="19"/><text x="49.0364%" y="351.50">&lt;..</text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (37 samples, 4.49%)</title><rect x="48.0583%" y="357" width="4.4903%" height="15" fill="rgb(231,13,6)" fg:x="396" fg:w="37"/><text x="48.3083%" y="367.50">curve..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (12 samples, 1.46%)</title><rect x="51.0922%" y="341" width="1.4563%" height="15" fill="rgb(207,181,40)" fg:x="421" fg:w="12"/><text x="51.3422%" y="351.50"></text></g><g><title>&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::dh (40 samples, 4.85%)</title><rect x="47.8155%" y="421" width="4.8544%" height="15" fill="rgb(254,173,49)" fg:x="394" fg:w="40"/><text x="48.0655%" y="431.50">&lt;libp2..</text></g><g><title>x25519_dalek::x25519::x25519 (40 samples, 4.85%)</title><rect x="47.8155%" y="405" width="4.8544%" height="15" fill="rgb(221,1,38)" fg:x="394" fg:w="40"/><text x="48.0655%" y="415.50">x25519..</text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (40 samples, 4.85%)</title><rect x="47.8155%" y="389" width="4.8544%" height="15" fill="rgb(206,124,46)" fg:x="394" fg:w="40"/><text x="48.0655%" y="399.50">curve2..</text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (40 samples, 4.85%)</title><rect x="47.8155%" y="373" width="4.8544%" height="15" fill="rgb(249,21,11)" fg:x="394" fg:w="40"/><text x="48.0655%" y="383.50">&lt;&amp;curv..</text></g><g><title>subtle::black_box (1 samples, 0.12%)</title><rect x="52.5485%" y="357" width="0.1214%" height="15" fill="rgb(222,201,40)" fg:x="433" fg:w="1"/><text x="52.7985%" y="367.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (3 samples, 0.36%)</title><rect x="52.6699%" y="357" width="0.3641%" height="15" fill="rgb(235,61,29)" fg:x="434" fg:w="3"/><text x="52.9199%" y="367.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (3 samples, 0.36%)</title><rect x="52.6699%" y="341" width="0.3641%" height="15" fill="rgb(219,207,3)" fg:x="434" fg:w="3"/><text x="52.9199%" y="351.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (4 samples, 0.49%)</title><rect x="53.2767%" y="341" width="0.4854%" height="15" fill="rgb(222,56,46)" fg:x="439" fg:w="4"/><text x="53.5267%" y="351.50"></text></g><g><title>&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::generate (16 samples, 1.94%)</title><rect x="52.6699%" y="421" width="1.9417%" height="15" fill="rgb(239,76,54)" fg:x="434" fg:w="16"/><text x="52.9199%" y="431.50">&lt;..</text></g><g><title>x25519_dalek::x25519::x25519 (16 samples, 1.94%)</title><rect x="52.6699%" y="405" width="1.9417%" height="15" fill="rgb(231,124,27)" fg:x="434" fg:w="16"/><text x="52.9199%" y="415.50">x..</text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (16 samples, 1.94%)</title><rect x="52.6699%" y="389" width="1.9417%" height="15" fill="rgb(249,195,6)" fg:x="434" fg:w="16"/><text x="52.9199%" y="399.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (16 samples, 1.94%)</title><rect x="52.6699%" y="373" width="1.9417%" height="15" fill="rgb(237,174,47)" fg:x="434" fg:w="16"/><text x="52.9199%" y="383.50">&lt;..</text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (13 samples, 1.58%)</title><rect x="53.0340%" y="357" width="1.5777%" height="15" fill="rgb(206,201,31)" fg:x="437" fg:w="13"/><text x="53.2840%" y="367.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (7 samples, 0.85%)</title><rect x="53.7621%" y="341" width="0.8495%" height="15" fill="rgb(231,57,52)" fg:x="443" fg:w="7"/><text x="54.0121%" y="351.50"></text></g><g><title>libp2p_noise::io::handshake::send_identity::_{{closure}} (57 samples, 6.92%)</title><rect x="47.8155%" y="469" width="6.9175%" height="15" fill="rgb(248,177,22)" fg:x="394" fg:w="57"/><text x="48.0655%" y="479.50">libp2p_no..</text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::handshakestate::HandshakeState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (57 samples, 6.92%)</title><rect x="47.8155%" y="453" width="6.9175%" height="15" fill="rgb(215,211,37)" fg:x="394" fg:w="57"/><text x="48.0655%" y="463.50">&lt;libp2p_n..</text></g><g><title>snow::handshakestate::HandshakeState::write_message (57 samples, 6.92%)</title><rect x="47.8155%" y="437" width="6.9175%" height="15" fill="rgb(241,128,51)" fg:x="394" fg:w="57"/><text x="48.0655%" y="447.50">snow::han..</text></g><g><title>snow::symmetricstate::SymmetricState::encrypt_and_mix_hash (1 samples, 0.12%)</title><rect x="54.6117%" y="421" width="0.1214%" height="15" fill="rgb(227,165,31)" fg:x="450" fg:w="1"/><text x="54.8617%" y="431.50"></text></g><g><title>&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::encrypt (1 samples, 0.12%)</title><rect x="54.6117%" y="405" width="0.1214%" height="15" fill="rgb(228,167,24)" fg:x="450" fg:w="1"/><text x="54.8617%" y="415.50"></text></g><g><title>ring::aead::chacha20_poly1305::chacha20_poly1305_seal (1 samples, 0.12%)</title><rect x="54.6117%" y="389" width="0.1214%" height="15" fill="rgb(228,143,12)" fg:x="450" fg:w="1"/><text x="54.8617%" y="399.50"></text></g><g><title>chacha20_poly1305_seal_avx2 (1 samples, 0.12%)</title><rect x="54.6117%" y="373" width="0.1214%" height="15" fill="rgb(249,149,8)" fg:x="450" fg:w="1"/><text x="54.8617%" y="383.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (1 samples, 0.12%)</title><rect x="54.7330%" y="373" width="0.1214%" height="15" fill="rgb(243,35,44)" fg:x="451" fg:w="1"/><text x="54.9830%" y="383.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.12%)</title><rect x="54.7330%" y="357" width="0.1214%" height="15" fill="rgb(246,89,9)" fg:x="451" fg:w="1"/><text x="54.9830%" y="367.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.24%)</title><rect x="54.8544%" y="357" width="0.2427%" height="15" fill="rgb(233,213,13)" fg:x="452" fg:w="2"/><text x="55.1044%" y="367.50"></text></g><g><title>&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::set (14 samples, 1.70%)</title><rect x="54.7330%" y="437" width="1.6990%" height="15" fill="rgb(233,141,41)" fg:x="451" fg:w="14"/><text x="54.9830%" y="447.50"></text></g><g><title>x25519_dalek::x25519::x25519 (14 samples, 1.70%)</title><rect x="54.7330%" y="421" width="1.6990%" height="15" fill="rgb(239,167,4)" fg:x="451" fg:w="14"/><text x="54.9830%" y="431.50"></text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (14 samples, 1.70%)</title><rect x="54.7330%" y="405" width="1.6990%" height="15" fill="rgb(209,217,16)" fg:x="451" fg:w="14"/><text x="54.9830%" y="415.50"></text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (14 samples, 1.70%)</title><rect x="54.7330%" y="389" width="1.6990%" height="15" fill="rgb(219,88,35)" fg:x="451" fg:w="14"/><text x="54.9830%" y="399.50"></text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (13 samples, 1.58%)</title><rect x="54.8544%" y="373" width="1.5777%" height="15" fill="rgb(220,193,23)" fg:x="452" fg:w="13"/><text x="55.1044%" y="383.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (11 samples, 1.33%)</title><rect x="55.0971%" y="357" width="1.3350%" height="15" fill="rgb(230,90,52)" fg:x="454" fg:w="11"/><text x="55.3471%" y="367.50"></text></g><g><title>&lt;snow::resolvers::ring::RingResolver as snow::resolvers::CryptoResolver&gt;::resolve_cipher (1 samples, 0.12%)</title><rect x="56.4320%" y="437" width="0.1214%" height="15" fill="rgb(252,106,19)" fg:x="465" fg:w="1"/><text x="56.6820%" y="447.50"></text></g><g><title>ring::aead::less_safe_key::LessSafeKey::new_ (1 samples, 0.12%)</title><rect x="56.4320%" y="421" width="0.1214%" height="15" fill="rgb(206,74,20)" fg:x="465" fg:w="1"/><text x="56.6820%" y="431.50"></text></g><g><title>&lt;libp2p_core::upgrade::apply::InboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (73 samples, 8.86%)</title><rect x="47.8155%" y="501" width="8.8592%" height="15" fill="rgb(230,138,44)" fg:x="394" fg:w="73"/><text x="48.0655%" y="511.50">&lt;libp2p_core:..</text></g><g><title>&lt;libp2p_noise::Config as libp2p_core::upgrade::InboundConnectionUpgrade&lt;T&gt;&gt;::upgrade_inbound::_{{closure}} (73 samples, 8.86%)</title><rect x="47.8155%" y="485" width="8.8592%" height="15" fill="rgb(235,182,43)" fg:x="394" fg:w="73"/><text x="48.0655%" y="495.50">&lt;libp2p_noise..</text></g><g><title>snow::builder::Builder::build_responder (16 samples, 1.94%)</title><rect x="54.7330%" y="469" width="1.9417%" height="15" fill="rgb(242,16,51)" fg:x="451" fg:w="16"/><text x="54.9830%" y="479.50">s..</text></g><g><title>snow::builder::Builder::build (16 samples, 1.94%)</title><rect x="54.7330%" y="453" width="1.9417%" height="15" fill="rgb(248,9,4)" fg:x="451" fg:w="16"/><text x="54.9830%" y="463.50">s..</text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="56.5534%" y="437" width="0.1214%" height="15" fill="rgb(210,31,22)" fg:x="466" fg:w="1"/><text x="56.8034%" y="447.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (10 samples, 1.21%)</title><rect x="56.9175%" y="357" width="1.2136%" height="15" fill="rgb(239,54,39)" fg:x="469" fg:w="10"/><text x="57.1675%" y="367.50"></text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::handshakestate::HandshakeState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (15 samples, 1.82%)</title><rect x="56.6748%" y="469" width="1.8204%" height="15" fill="rgb(230,99,41)" fg:x="467" fg:w="15"/><text x="56.9248%" y="479.50">&lt;..</text></g><g><title>snow::handshakestate::HandshakeState::write_message (15 samples, 1.82%)</title><rect x="56.6748%" y="453" width="1.8204%" height="15" fill="rgb(253,106,12)" fg:x="467" fg:w="15"/><text x="56.9248%" y="463.50">s..</text></g><g><title>&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::generate (15 samples, 1.82%)</title><rect x="56.6748%" y="437" width="1.8204%" height="15" fill="rgb(213,46,41)" fg:x="467" fg:w="15"/><text x="56.9248%" y="447.50">&lt;..</text></g><g><title>x25519_dalek::x25519::x25519 (15 samples, 1.82%)</title><rect x="56.6748%" y="421" width="1.8204%" height="15" fill="rgb(215,133,35)" fg:x="467" fg:w="15"/><text x="56.9248%" y="431.50">x..</text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (15 samples, 1.82%)</title><rect x="56.6748%" y="405" width="1.8204%" height="15" fill="rgb(213,28,5)" fg:x="467" fg:w="15"/><text x="56.9248%" y="415.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (15 samples, 1.82%)</title><rect x="56.6748%" y="389" width="1.8204%" height="15" fill="rgb(215,77,49)" fg:x="467" fg:w="15"/><text x="56.9248%" y="399.50">&lt;..</text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (15 samples, 1.82%)</title><rect x="56.6748%" y="373" width="1.8204%" height="15" fill="rgb(248,100,22)" fg:x="467" fg:w="15"/><text x="56.9248%" y="383.50">c..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (3 samples, 0.36%)</title><rect x="58.1311%" y="357" width="0.3641%" height="15" fill="rgb(208,67,9)" fg:x="479" fg:w="3"/><text x="58.3811%" y="367.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (2 samples, 0.24%)</title><rect x="58.4951%" y="357" width="0.2427%" height="15" fill="rgb(219,133,21)" fg:x="482" fg:w="2"/><text x="58.7451%" y="367.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2 samples, 0.24%)</title><rect x="58.4951%" y="341" width="0.2427%" height="15" fill="rgb(246,46,29)" fg:x="482" fg:w="2"/><text x="58.7451%" y="351.50"></text></g><g><title>libp2p_noise::io::handshake::recv_identity::_{{closure}} (3 samples, 0.36%)</title><rect x="58.4951%" y="469" width="0.3641%" height="15" fill="rgb(246,185,52)" fg:x="482" fg:w="3"/><text x="58.7451%" y="479.50"></text></g><g><title>libp2p_identity::keypair::PublicKey::try_decode_protobuf (3 samples, 0.36%)</title><rect x="58.4951%" y="453" width="0.3641%" height="15" fill="rgb(252,136,11)" fg:x="482" fg:w="3"/><text x="58.7451%" y="463.50"></text></g><g><title>&lt;libp2p_identity::keypair::PublicKey as core::convert::TryFrom&lt;libp2p_identity::proto::keys_proto::PublicKey&gt;&gt;::try_from (3 samples, 0.36%)</title><rect x="58.4951%" y="437" width="0.3641%" height="15" fill="rgb(219,138,53)" fg:x="482" fg:w="3"/><text x="58.7451%" y="447.50"></text></g><g><title>libp2p_identity::ed25519::PublicKey::try_from_bytes (3 samples, 0.36%)</title><rect x="58.4951%" y="421" width="0.3641%" height="15" fill="rgb(211,51,23)" fg:x="482" fg:w="3"/><text x="58.7451%" y="431.50"></text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::decompress (3 samples, 0.36%)</title><rect x="58.4951%" y="405" width="0.3641%" height="15" fill="rgb(247,221,28)" fg:x="482" fg:w="3"/><text x="58.7451%" y="415.50"></text></g><g><title>curve25519_dalek::edwards::decompress::step_1 (3 samples, 0.36%)</title><rect x="58.4951%" y="389" width="0.3641%" height="15" fill="rgb(251,222,45)" fg:x="482" fg:w="3"/><text x="58.7451%" y="399.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (3 samples, 0.36%)</title><rect x="58.4951%" y="373" width="0.3641%" height="15" fill="rgb(217,162,53)" fg:x="482" fg:w="3"/><text x="58.7451%" y="383.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.12%)</title><rect x="58.7379%" y="357" width="0.1214%" height="15" fill="rgb(229,93,14)" fg:x="484" fg:w="1"/><text x="58.9879%" y="367.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (1 samples, 0.12%)</title><rect x="59.1019%" y="357" width="0.1214%" height="15" fill="rgb(209,67,49)" fg:x="487" fg:w="1"/><text x="59.3519%" y="367.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.12%)</title><rect x="59.1019%" y="341" width="0.1214%" height="15" fill="rgb(213,87,29)" fg:x="487" fg:w="1"/><text x="59.3519%" y="351.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3 samples, 0.36%)</title><rect x="59.2233%" y="341" width="0.3641%" height="15" fill="rgb(205,151,52)" fg:x="488" fg:w="3"/><text x="59.4733%" y="351.50"></text></g><g><title>libp2p_noise::io::handshake::send_identity::_{{closure}} (16 samples, 1.94%)</title><rect x="58.8592%" y="469" width="1.9417%" height="15" fill="rgb(253,215,39)" fg:x="485" fg:w="16"/><text x="59.1092%" y="479.50">l..</text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::handshakestate::HandshakeState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (16 samples, 1.94%)</title><rect x="58.8592%" y="453" width="1.9417%" height="15" fill="rgb(221,220,41)" fg:x="485" fg:w="16"/><text x="59.1092%" y="463.50">&lt;..</text></g><g><title>snow::handshakestate::HandshakeState::write_message (16 samples, 1.94%)</title><rect x="58.8592%" y="437" width="1.9417%" height="15" fill="rgb(218,133,21)" fg:x="485" fg:w="16"/><text x="59.1092%" y="447.50">s..</text></g><g><title>&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::dh (16 samples, 1.94%)</title><rect x="58.8592%" y="421" width="1.9417%" height="15" fill="rgb(221,193,43)" fg:x="485" fg:w="16"/><text x="59.1092%" y="431.50">&lt;..</text></g><g><title>x25519_dalek::x25519::x25519 (16 samples, 1.94%)</title><rect x="58.8592%" y="405" width="1.9417%" height="15" fill="rgb(240,128,52)" fg:x="485" fg:w="16"/><text x="59.1092%" y="415.50">x..</text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (16 samples, 1.94%)</title><rect x="58.8592%" y="389" width="1.9417%" height="15" fill="rgb(253,114,12)" fg:x="485" fg:w="16"/><text x="59.1092%" y="399.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (16 samples, 1.94%)</title><rect x="58.8592%" y="373" width="1.9417%" height="15" fill="rgb(215,223,47)" fg:x="485" fg:w="16"/><text x="59.1092%" y="383.50">&lt;..</text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (13 samples, 1.58%)</title><rect x="59.2233%" y="357" width="1.5777%" height="15" fill="rgb(248,225,23)" fg:x="488" fg:w="13"/><text x="59.4733%" y="367.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (10 samples, 1.21%)</title><rect x="59.5874%" y="341" width="1.2136%" height="15" fill="rgb(250,108,0)" fg:x="491" fg:w="10"/><text x="59.8374%" y="351.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (1 samples, 0.12%)</title><rect x="60.8010%" y="373" width="0.1214%" height="15" fill="rgb(228,208,7)" fg:x="501" fg:w="1"/><text x="61.0510%" y="383.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.12%)</title><rect x="60.8010%" y="357" width="0.1214%" height="15" fill="rgb(244,45,10)" fg:x="501" fg:w="1"/><text x="61.0510%" y="367.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (4 samples, 0.49%)</title><rect x="61.0437%" y="357" width="0.4854%" height="15" fill="rgb(207,125,25)" fg:x="503" fg:w="4"/><text x="61.2937%" y="367.50"></text></g><g><title>&lt;libp2p_core::transport::and_then::AndThenFuture&lt;TFut,TMap,TMapOut&gt; as core::future::future::Future&gt;::poll (119 samples, 14.44%)</title><rect x="47.8155%" y="517" width="14.4417%" height="15" fill="rgb(210,195,18)" fg:x="394" fg:w="119"/><text x="48.0655%" y="527.50">&lt;libp2p_core::transpor..</text></g><g><title>&lt;libp2p_core::upgrade::apply::OutboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (46 samples, 5.58%)</title><rect x="56.6748%" y="501" width="5.5825%" height="15" fill="rgb(249,80,12)" fg:x="467" fg:w="46"/><text x="56.9248%" y="511.50">&lt;libp2p..</text></g><g><title>&lt;libp2p_noise::Config as libp2p_core::upgrade::OutboundConnectionUpgrade&lt;T&gt;&gt;::upgrade_outbound::_{{closure}} (46 samples, 5.58%)</title><rect x="56.6748%" y="485" width="5.5825%" height="15" fill="rgb(221,65,9)" fg:x="467" fg:w="46"/><text x="56.9248%" y="495.50">&lt;libp2p..</text></g><g><title>snow::builder::Builder::build_initiator (12 samples, 1.46%)</title><rect x="60.8010%" y="469" width="1.4563%" height="15" fill="rgb(235,49,36)" fg:x="501" fg:w="12"/><text x="61.0510%" y="479.50"></text></g><g><title>snow::builder::Builder::build (12 samples, 1.46%)</title><rect x="60.8010%" y="453" width="1.4563%" height="15" fill="rgb(225,32,20)" fg:x="501" fg:w="12"/><text x="61.0510%" y="463.50"></text></g><g><title>&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::set (12 samples, 1.46%)</title><rect x="60.8010%" y="437" width="1.4563%" height="15" fill="rgb(215,141,46)" fg:x="501" fg:w="12"/><text x="61.0510%" y="447.50"></text></g><g><title>x25519_dalek::x25519::x25519 (12 samples, 1.46%)</title><rect x="60.8010%" y="421" width="1.4563%" height="15" fill="rgb(250,160,47)" fg:x="501" fg:w="12"/><text x="61.0510%" y="431.50"></text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (12 samples, 1.46%)</title><rect x="60.8010%" y="405" width="1.4563%" height="15" fill="rgb(216,222,40)" fg:x="501" fg:w="12"/><text x="61.0510%" y="415.50"></text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (12 samples, 1.46%)</title><rect x="60.8010%" y="389" width="1.4563%" height="15" fill="rgb(234,217,39)" fg:x="501" fg:w="12"/><text x="61.0510%" y="399.50"></text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (11 samples, 1.33%)</title><rect x="60.9223%" y="373" width="1.3350%" height="15" fill="rgb(207,178,40)" fg:x="502" fg:w="11"/><text x="61.1723%" y="383.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (6 samples, 0.73%)</title><rect x="61.5291%" y="357" width="0.7282%" height="15" fill="rgb(221,136,13)" fg:x="507" fg:w="6"/><text x="61.7791%" y="367.50"></text></g><g><title>&lt;libp2p_core::transport::map::MapFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.2573%" y="517" width="0.1214%" height="15" fill="rgb(249,199,10)" fg:x="513" fg:w="1"/><text x="62.5073%" y="527.50"></text></g><g><title>&lt;libp2p_core::transport::and_then::AndThenFuture&lt;TFut,TMap,TMapOut&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.2573%" y="501" width="0.1214%" height="15" fill="rgb(249,222,13)" fg:x="513" fg:w="1"/><text x="62.5073%" y="511.50"></text></g><g><title>&lt;libp2p_core::transport::upgrade::Multiplex&lt;C,U&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.2573%" y="485" width="0.1214%" height="15" fill="rgb(244,185,38)" fg:x="513" fg:w="1"/><text x="62.5073%" y="495.50"></text></g><g><title>&lt;libp2p_core::upgrade::apply::OutboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.2573%" y="469" width="0.1214%" height="15" fill="rgb(236,202,9)" fg:x="513" fg:w="1"/><text x="62.5073%" y="479.50"></text></g><g><title>&lt;multistream_select::dialer_select::DialerSelectFuture&lt;R,I&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.2573%" y="453" width="0.1214%" height="15" fill="rgb(250,229,37)" fg:x="513" fg:w="1"/><text x="62.5073%" y="463.50"></text></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_flush (1 samples, 0.12%)</title><rect x="62.2573%" y="437" width="0.1214%" height="15" fill="rgb(206,174,23)" fg:x="513" fg:w="1"/><text x="62.5073%" y="447.50"></text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (1 samples, 0.12%)</title><rect x="62.2573%" y="421" width="0.1214%" height="15" fill="rgb(211,33,43)" fg:x="513" fg:w="1"/><text x="62.5073%" y="431.50"></text></g><g><title>snow::transportstate::TransportState::write_message (1 samples, 0.12%)</title><rect x="62.2573%" y="405" width="0.1214%" height="15" fill="rgb(245,58,50)" fg:x="513" fg:w="1"/><text x="62.5073%" y="415.50"></text></g><g><title>&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::encrypt (1 samples, 0.12%)</title><rect x="62.2573%" y="389" width="0.1214%" height="15" fill="rgb(244,68,36)" fg:x="513" fg:w="1"/><text x="62.5073%" y="399.50"></text></g><g><title>ring::aead::chacha20_poly1305::chacha20_poly1305_seal (1 samples, 0.12%)</title><rect x="62.2573%" y="373" width="0.1214%" height="15" fill="rgb(232,229,15)" fg:x="513" fg:w="1"/><text x="62.5073%" y="383.50"></text></g><g><title>chacha20_poly1305_seal_avx2 (1 samples, 0.12%)</title><rect x="62.2573%" y="357" width="0.1214%" height="15" fill="rgb(254,30,23)" fg:x="513" fg:w="1"/><text x="62.5073%" y="367.50"></text></g><g><title>&lt;libp2p_core::transport::upgrade::Multiplex&lt;C,U&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.3786%" y="517" width="0.1214%" height="15" fill="rgb(235,160,14)" fg:x="514" fg:w="1"/><text x="62.6286%" y="527.50"></text></g><g><title>&lt;libp2p_core::upgrade::apply::OutboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.3786%" y="501" width="0.1214%" height="15" fill="rgb(212,155,44)" fg:x="514" fg:w="1"/><text x="62.6286%" y="511.50"></text></g><g><title>&lt;multistream_select::dialer_select::DialerSelectFuture&lt;R,I&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.3786%" y="485" width="0.1214%" height="15" fill="rgb(226,2,50)" fg:x="514" fg:w="1"/><text x="62.6286%" y="495.50"></text></g><g><title>&lt;multistream_select::protocol::MessageIO&lt;R&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="62.3786%" y="469" width="0.1214%" height="15" fill="rgb(234,177,6)" fg:x="514" fg:w="1"/><text x="62.6286%" y="479.50"></text></g><g><title>&lt;multistream_select::length_delimited::LengthDelimited&lt;R&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="62.3786%" y="453" width="0.1214%" height="15" fill="rgb(217,24,9)" fg:x="514" fg:w="1"/><text x="62.6286%" y="463.50"></text></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="62.3786%" y="437" width="0.1214%" height="15" fill="rgb(220,13,46)" fg:x="514" fg:w="1"/><text x="62.6286%" y="447.50"></text></g><g><title>&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="62.3786%" y="421" width="0.1214%" height="15" fill="rgb(239,221,27)" fg:x="514" fg:w="1"/><text x="62.6286%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="62.3786%" y="405" width="0.1214%" height="15" fill="rgb(222,198,25)" fg:x="514" fg:w="1"/><text x="62.6286%" y="415.50"></text></g><g><title>&lt;libp2p_core::upgrade::apply::InboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.5000%" y="517" width="0.1214%" height="15" fill="rgb(211,99,13)" fg:x="515" fg:w="1"/><text x="62.7500%" y="527.50"></text></g><g><title>&lt;multistream_select::listener_select::ListenerSelectFuture&lt;R,N&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.5000%" y="501" width="0.1214%" height="15" fill="rgb(232,111,31)" fg:x="515" fg:w="1"/><text x="62.7500%" y="511.50"></text></g><g><title>&lt;multistream_select::protocol::MessageIO&lt;R&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="62.5000%" y="485" width="0.1214%" height="15" fill="rgb(245,82,37)" fg:x="515" fg:w="1"/><text x="62.7500%" y="495.50"></text></g><g><title>&lt;multistream_select::length_delimited::LengthDelimited&lt;R&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="62.5000%" y="469" width="0.1214%" height="15" fill="rgb(227,149,46)" fg:x="515" fg:w="1"/><text x="62.7500%" y="479.50"></text></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="62.5000%" y="453" width="0.1214%" height="15" fill="rgb(218,36,50)" fg:x="515" fg:w="1"/><text x="62.7500%" y="463.50"></text></g><g><title>&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="62.5000%" y="437" width="0.1214%" height="15" fill="rgb(226,80,48)" fg:x="515" fg:w="1"/><text x="62.7500%" y="447.50"></text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (1 samples, 0.12%)</title><rect x="62.5000%" y="421" width="0.1214%" height="15" fill="rgb(238,224,15)" fg:x="515" fg:w="1"/><text x="62.7500%" y="431.50"></text></g><g><title>snow::transportstate::TransportState::read_message (1 samples, 0.12%)</title><rect x="62.5000%" y="405" width="0.1214%" height="15" fill="rgb(241,136,10)" fg:x="515" fg:w="1"/><text x="62.7500%" y="415.50"></text></g><g><title>&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::decrypt (1 samples, 0.12%)</title><rect x="62.5000%" y="389" width="0.1214%" height="15" fill="rgb(208,32,45)" fg:x="515" fg:w="1"/><text x="62.7500%" y="399.50"></text></g><g><title>ring::aead::less_safe_key::open_within_ (1 samples, 0.12%)</title><rect x="62.5000%" y="373" width="0.1214%" height="15" fill="rgb(207,135,9)" fg:x="515" fg:w="1"/><text x="62.7500%" y="383.50"></text></g><g><title>ring::aead::chacha20_poly1305::chacha20_poly1305_open (1 samples, 0.12%)</title><rect x="62.5000%" y="357" width="0.1214%" height="15" fill="rgb(206,86,44)" fg:x="515" fg:w="1"/><text x="62.7500%" y="367.50"></text></g><g><title>chacha20_poly1305_open_avx2 (1 samples, 0.12%)</title><rect x="62.5000%" y="341" width="0.1214%" height="15" fill="rgb(245,177,15)" fg:x="515" fg:w="1"/><text x="62.7500%" y="351.50"></text></g><g><title>&lt;libp2p_core::upgrade::apply::OutboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.6214%" y="517" width="0.1214%" height="15" fill="rgb(206,64,50)" fg:x="516" fg:w="1"/><text x="62.8714%" y="527.50"></text></g><g><title>&lt;multistream_select::dialer_select::DialerSelectFuture&lt;R,I&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="62.6214%" y="501" width="0.1214%" height="15" fill="rgb(234,36,40)" fg:x="516" fg:w="1"/><text x="62.8714%" y="511.50"></text></g><g><title>&lt;multistream_select::protocol::MessageIO&lt;R&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="62.6214%" y="485" width="0.1214%" height="15" fill="rgb(213,64,8)" fg:x="516" fg:w="1"/><text x="62.8714%" y="495.50"></text></g><g><title>&lt;multistream_select::length_delimited::LengthDelimited&lt;R&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="62.6214%" y="469" width="0.1214%" height="15" fill="rgb(210,75,36)" fg:x="516" fg:w="1"/><text x="62.8714%" y="479.50"></text></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="62.6214%" y="453" width="0.1214%" height="15" fill="rgb(229,88,21)" fg:x="516" fg:w="1"/><text x="62.8714%" y="463.50"></text></g><g><title>&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="62.6214%" y="437" width="0.1214%" height="15" fill="rgb(252,204,47)" fg:x="516" fg:w="1"/><text x="62.8714%" y="447.50"></text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (1 samples, 0.12%)</title><rect x="62.6214%" y="421" width="0.1214%" height="15" fill="rgb(208,77,27)" fg:x="516" fg:w="1"/><text x="62.8714%" y="431.50"></text></g><g><title>snow::transportstate::TransportState::read_message (1 samples, 0.12%)</title><rect x="62.6214%" y="405" width="0.1214%" height="15" fill="rgb(221,76,26)" fg:x="516" fg:w="1"/><text x="62.8714%" y="415.50"></text></g><g><title>&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::decrypt (1 samples, 0.12%)</title><rect x="62.6214%" y="389" width="0.1214%" height="15" fill="rgb(225,139,18)" fg:x="516" fg:w="1"/><text x="62.8714%" y="399.50"></text></g><g><title>ring::aead::less_safe_key::open_within_ (1 samples, 0.12%)</title><rect x="62.6214%" y="373" width="0.1214%" height="15" fill="rgb(230,137,11)" fg:x="516" fg:w="1"/><text x="62.8714%" y="383.50"></text></g><g><title>ring::aead::chacha20_poly1305::chacha20_poly1305_open (1 samples, 0.12%)</title><rect x="62.6214%" y="357" width="0.1214%" height="15" fill="rgb(212,28,1)" fg:x="516" fg:w="1"/><text x="62.8714%" y="367.50"></text></g><g><title>ring_core_0_17_5_chacha20_poly1305_open (1 samples, 0.12%)</title><rect x="62.6214%" y="341" width="0.1214%" height="15" fill="rgb(248,164,17)" fg:x="516" fg:w="1"/><text x="62.8714%" y="351.50"></text></g><g><title>&lt;libp2p_identify::proto::structs::Identify as quick_protobuf::message::MessageRead&gt;::from_reader (1 samples, 0.12%)</title><rect x="62.7427%" y="517" width="0.1214%" height="15" fill="rgb(222,171,42)" fg:x="517" fg:w="1"/><text x="62.9927%" y="527.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.61%)</title><rect x="62.8641%" y="469" width="0.6068%" height="15" fill="rgb(243,84,45)" fg:x="518" fg:w="5"/><text x="63.1141%" y="479.50"></text></g><g><title>[libc.so.6] (5 samples, 0.61%)</title><rect x="62.8641%" y="453" width="0.6068%" height="15" fill="rgb(252,49,23)" fg:x="518" fg:w="5"/><text x="63.1141%" y="463.50"></text></g><g><title>&lt;libp2p_kad::kbucket::ClosestBucketsIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="63.4709%" y="469" width="0.2427%" height="15" fill="rgb(215,19,7)" fg:x="523" fg:w="2"/><text x="63.7209%" y="479.50"></text></g><g><title>&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (15 samples, 1.82%)</title><rect x="62.8641%" y="517" width="1.8204%" height="15" fill="rgb(238,81,41)" fg:x="518" fg:w="15"/><text x="63.1141%" y="527.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 1.82%)</title><rect x="62.8641%" y="501" width="1.8204%" height="15" fill="rgb(210,199,37)" fg:x="518" fg:w="15"/><text x="63.1141%" y="511.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.82%)</title><rect x="62.8641%" y="485" width="1.8204%" height="15" fill="rgb(244,192,49)" fg:x="518" fg:w="15"/><text x="63.1141%" y="495.50">&lt;..</text></g><g><title>[libc.so.6] (8 samples, 0.97%)</title><rect x="63.7136%" y="469" width="0.9709%" height="15" fill="rgb(226,211,11)" fg:x="525" fg:w="8"/><text x="63.9636%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="64.6845%" y="501" width="0.1214%" height="15" fill="rgb(236,162,54)" fg:x="533" fg:w="1"/><text x="64.9345%" y="511.50"></text></g><g><title>&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (3 samples, 0.36%)</title><rect x="64.6845%" y="517" width="0.3641%" height="15" fill="rgb(220,229,9)" fg:x="533" fg:w="3"/><text x="64.9345%" y="527.50"></text></g><g><title>libp2p_kad::query::QueryPool&lt;TInner&gt;::poll (2 samples, 0.24%)</title><rect x="64.8058%" y="501" width="0.2427%" height="15" fill="rgb(250,87,22)" fg:x="534" fg:w="2"/><text x="65.0558%" y="511.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as &lt;&amp;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::vector::avx2::edwards::CachedPoint&gt;&gt;::sub::__Impl_sub__&gt;::_impl_sub (1 samples, 0.12%)</title><rect x="65.0485%" y="389" width="0.1214%" height="15" fill="rgb(239,43,17)" fg:x="536" fg:w="1"/><text x="65.2985%" y="399.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul (1 samples, 0.12%)</title><rect x="65.0485%" y="373" width="0.1214%" height="15" fill="rgb(231,177,25)" fg:x="536" fg:w="1"/><text x="65.2985%" y="383.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul (3 samples, 0.36%)</title><rect x="65.2913%" y="373" width="0.3641%" height="15" fill="rgb(219,179,1)" fg:x="538" fg:w="3"/><text x="65.5413%" y="383.50"></text></g><g><title>libp2p_noise::io::handshake::State&lt;T&gt;::finish (7 samples, 0.85%)</title><rect x="65.0485%" y="501" width="0.8495%" height="15" fill="rgb(238,219,53)" fg:x="536" fg:w="7"/><text x="65.2985%" y="511.50"></text></g><g><title>libp2p_identity::ed25519::PublicKey::verify (7 samples, 0.85%)</title><rect x="65.0485%" y="485" width="0.8495%" height="15" fill="rgb(232,167,36)" fg:x="536" fg:w="7"/><text x="65.2985%" y="495.50"></text></g><g><title>&lt;ed25519_dalek::verifying::VerifyingKey as signature::verifier::Verifier&lt;ed25519::Signature&gt;&gt;::verify (7 samples, 0.85%)</title><rect x="65.0485%" y="469" width="0.8495%" height="15" fill="rgb(244,19,51)" fg:x="536" fg:w="7"/><text x="65.2985%" y="479.50"></text></g><g><title>_ZN13ed25519_dalek9verifying12VerifyingKey11recompute_R17hdbb032bcd40bf036E.llvm.12187908402712359837 (7 samples, 0.85%)</title><rect x="65.0485%" y="453" width="0.8495%" height="15" fill="rgb(224,6,22)" fg:x="536" fg:w="7"/><text x="65.2985%" y="463.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (7 samples, 0.85%)</title><rect x="65.0485%" y="437" width="0.8495%" height="15" fill="rgb(224,145,5)" fg:x="536" fg:w="7"/><text x="65.2985%" y="447.50"></text></g><g><title>curve25519_dalek::backend::vartime_double_base_mul (7 samples, 0.85%)</title><rect x="65.0485%" y="421" width="0.8495%" height="15" fill="rgb(234,130,49)" fg:x="536" fg:w="7"/><text x="65.2985%" y="431.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::vartime_double_base::spec_avx2::mul::_impl_mul (7 samples, 0.85%)</title><rect x="65.0485%" y="405" width="0.8495%" height="15" fill="rgb(254,6,2)" fg:x="536" fg:w="7"/><text x="65.2985%" y="415.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double::__Impl_double__&gt;::_impl_double (6 samples, 0.73%)</title><rect x="65.1699%" y="389" width="0.7282%" height="15" fill="rgb(208,96,46)" fg:x="537" fg:w="6"/><text x="65.4199%" y="399.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::square_and_negate_D::__Impl_square_and_negate_D__&gt;::_impl_square_and_negate_D (2 samples, 0.24%)</title><rect x="65.6553%" y="373" width="0.2427%" height="15" fill="rgb(239,3,39)" fg:x="541" fg:w="2"/><text x="65.9053%" y="383.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (1 samples, 0.12%)</title><rect x="66.0194%" y="373" width="0.1214%" height="15" fill="rgb(233,210,1)" fg:x="544" fg:w="1"/><text x="66.2694%" y="383.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.12%)</title><rect x="66.0194%" y="357" width="0.1214%" height="15" fill="rgb(244,137,37)" fg:x="544" fg:w="1"/><text x="66.2694%" y="367.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (12 samples, 1.46%)</title><rect x="66.2621%" y="357" width="1.4563%" height="15" fill="rgb(240,136,2)" fg:x="546" fg:w="12"/><text x="66.5121%" y="367.50"></text></g><g><title>&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::dh (19 samples, 2.31%)</title><rect x="65.8981%" y="437" width="2.3058%" height="15" fill="rgb(239,18,37)" fg:x="543" fg:w="19"/><text x="66.1481%" y="447.50">&lt;..</text></g><g><title>x25519_dalek::x25519::x25519 (19 samples, 2.31%)</title><rect x="65.8981%" y="421" width="2.3058%" height="15" fill="rgb(218,185,22)" fg:x="543" fg:w="19"/><text x="66.1481%" y="431.50">x..</text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (19 samples, 2.31%)</title><rect x="65.8981%" y="405" width="2.3058%" height="15" fill="rgb(225,218,4)" fg:x="543" fg:w="19"/><text x="66.1481%" y="415.50">c..</text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (19 samples, 2.31%)</title><rect x="65.8981%" y="389" width="2.3058%" height="15" fill="rgb(230,182,32)" fg:x="543" fg:w="19"/><text x="66.1481%" y="399.50">&lt;..</text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (17 samples, 2.06%)</title><rect x="66.1408%" y="373" width="2.0631%" height="15" fill="rgb(242,56,43)" fg:x="545" fg:w="17"/><text x="66.3908%" y="383.50">c..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (4 samples, 0.49%)</title><rect x="67.7184%" y="357" width="0.4854%" height="15" fill="rgb(233,99,24)" fg:x="558" fg:w="4"/><text x="67.9684%" y="367.50"></text></g><g><title>&lt;libp2p_noise::Config as libp2p_core::upgrade::InboundConnectionUpgrade&lt;T&gt;&gt;::upgrade_inbound::_{{closure}} (27 samples, 3.28%)</title><rect x="65.0485%" y="517" width="3.2767%" height="15" fill="rgb(234,209,42)" fg:x="536" fg:w="27"/><text x="65.2985%" y="527.50">&lt;li..</text></g><g><title>libp2p_noise::io::handshake::recv_identity::_{{closure}} (20 samples, 2.43%)</title><rect x="65.8981%" y="501" width="2.4272%" height="15" fill="rgb(227,7,12)" fg:x="543" fg:w="20"/><text x="66.1481%" y="511.50">li..</text></g><g><title>&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 2.43%)</title><rect x="65.8981%" y="485" width="2.4272%" height="15" fill="rgb(245,203,43)" fg:x="543" fg:w="20"/><text x="66.1481%" y="495.50">&lt;a..</text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::handshakestate::HandshakeState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (20 samples, 2.43%)</title><rect x="65.8981%" y="469" width="2.4272%" height="15" fill="rgb(238,205,33)" fg:x="543" fg:w="20"/><text x="66.1481%" y="479.50">&lt;l..</text></g><g><title>snow::handshakestate::HandshakeState::read_message (20 samples, 2.43%)</title><rect x="65.8981%" y="453" width="2.4272%" height="15" fill="rgb(231,56,7)" fg:x="543" fg:w="20"/><text x="66.1481%" y="463.50">sn..</text></g><g><title>snow::symmetricstate::SymmetricState::split (1 samples, 0.12%)</title><rect x="68.2039%" y="437" width="0.1214%" height="15" fill="rgb(244,186,29)" fg:x="562" fg:w="1"/><text x="68.4539%" y="447.50"></text></g><g><title>snow::types::Hash::hkdf (1 samples, 0.12%)</title><rect x="68.2039%" y="421" width="0.1214%" height="15" fill="rgb(234,111,31)" fg:x="562" fg:w="1"/><text x="68.4539%" y="431.50"></text></g><g><title>snow::types::Hash::hmac (1 samples, 0.12%)</title><rect x="68.2039%" y="405" width="0.1214%" height="15" fill="rgb(241,149,10)" fg:x="562" fg:w="1"/><text x="68.4539%" y="415.50"></text></g><g><title>ring::digest::Context::update (1 samples, 0.12%)</title><rect x="68.2039%" y="389" width="0.1214%" height="15" fill="rgb(249,206,44)" fg:x="562" fg:w="1"/><text x="68.4539%" y="399.50"></text></g><g><title>sha256_block_data_order_shaext (1 samples, 0.12%)</title><rect x="68.2039%" y="373" width="0.1214%" height="15" fill="rgb(251,153,30)" fg:x="562" fg:w="1"/><text x="68.4539%" y="383.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as &lt;&amp;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::vector::avx2::edwards::CachedPoint&gt;&gt;::add::__Impl_add__&gt;::_impl_add (1 samples, 0.12%)</title><rect x="68.3252%" y="389" width="0.1214%" height="15" fill="rgb(239,152,38)" fg:x="563" fg:w="1"/><text x="68.5752%" y="399.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul (1 samples, 0.12%)</title><rect x="68.3252%" y="373" width="0.1214%" height="15" fill="rgb(249,139,47)" fg:x="563" fg:w="1"/><text x="68.5752%" y="383.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul (2 samples, 0.24%)</title><rect x="68.5680%" y="373" width="0.2427%" height="15" fill="rgb(244,64,35)" fg:x="565" fg:w="2"/><text x="68.8180%" y="383.50"></text></g><g><title>libp2p_noise::io::handshake::State&lt;T&gt;::finish (5 samples, 0.61%)</title><rect x="68.3252%" y="501" width="0.6068%" height="15" fill="rgb(216,46,15)" fg:x="563" fg:w="5"/><text x="68.5752%" y="511.50"></text></g><g><title>libp2p_identity::ed25519::PublicKey::verify (5 samples, 0.61%)</title><rect x="68.3252%" y="485" width="0.6068%" height="15" fill="rgb(250,74,19)" fg:x="563" fg:w="5"/><text x="68.5752%" y="495.50"></text></g><g><title>&lt;ed25519_dalek::verifying::VerifyingKey as signature::verifier::Verifier&lt;ed25519::Signature&gt;&gt;::verify (5 samples, 0.61%)</title><rect x="68.3252%" y="469" width="0.6068%" height="15" fill="rgb(249,42,33)" fg:x="563" fg:w="5"/><text x="68.5752%" y="479.50"></text></g><g><title>_ZN13ed25519_dalek9verifying12VerifyingKey11recompute_R17hdbb032bcd40bf036E.llvm.12187908402712359837 (5 samples, 0.61%)</title><rect x="68.3252%" y="453" width="0.6068%" height="15" fill="rgb(242,149,17)" fg:x="563" fg:w="5"/><text x="68.5752%" y="463.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (5 samples, 0.61%)</title><rect x="68.3252%" y="437" width="0.6068%" height="15" fill="rgb(244,29,21)" fg:x="563" fg:w="5"/><text x="68.5752%" y="447.50"></text></g><g><title>curve25519_dalek::backend::vartime_double_base_mul (5 samples, 0.61%)</title><rect x="68.3252%" y="421" width="0.6068%" height="15" fill="rgb(220,130,37)" fg:x="563" fg:w="5"/><text x="68.5752%" y="431.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::vartime_double_base::spec_avx2::mul::_impl_mul (5 samples, 0.61%)</title><rect x="68.3252%" y="405" width="0.6068%" height="15" fill="rgb(211,67,2)" fg:x="563" fg:w="5"/><text x="68.5752%" y="415.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double::__Impl_double__&gt;::_impl_double (4 samples, 0.49%)</title><rect x="68.4466%" y="389" width="0.4854%" height="15" fill="rgb(235,68,52)" fg:x="564" fg:w="4"/><text x="68.6966%" y="399.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::square_and_negate_D::__Impl_square_and_negate_D__&gt;::_impl_square_and_negate_D (1 samples, 0.12%)</title><rect x="68.8107%" y="373" width="0.1214%" height="15" fill="rgb(246,142,3)" fg:x="567" fg:w="1"/><text x="69.0607%" y="383.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (4 samples, 0.49%)</title><rect x="69.2961%" y="373" width="0.4854%" height="15" fill="rgb(241,25,7)" fg:x="571" fg:w="4"/><text x="69.5461%" y="383.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (4 samples, 0.49%)</title><rect x="69.2961%" y="357" width="0.4854%" height="15" fill="rgb(242,119,39)" fg:x="571" fg:w="4"/><text x="69.5461%" y="367.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (13 samples, 1.58%)</title><rect x="70.0243%" y="357" width="1.5777%" height="15" fill="rgb(241,98,45)" fg:x="577" fg:w="13"/><text x="70.2743%" y="367.50"></text></g><g><title>&lt;libp2p_noise::protocol::Keypair as snow::types::Dh&gt;::dh (26 samples, 3.16%)</title><rect x="68.9320%" y="437" width="3.1553%" height="15" fill="rgb(254,28,30)" fg:x="568" fg:w="26"/><text x="69.1820%" y="447.50">&lt;li..</text></g><g><title>x25519_dalek::x25519::x25519 (26 samples, 3.16%)</title><rect x="68.9320%" y="421" width="3.1553%" height="15" fill="rgb(241,142,54)" fg:x="568" fg:w="26"/><text x="69.1820%" y="431.50">x25..</text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (26 samples, 3.16%)</title><rect x="68.9320%" y="405" width="3.1553%" height="15" fill="rgb(222,85,15)" fg:x="568" fg:w="26"/><text x="69.1820%" y="415.50">cur..</text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (26 samples, 3.16%)</title><rect x="68.9320%" y="389" width="3.1553%" height="15" fill="rgb(210,85,47)" fg:x="568" fg:w="26"/><text x="69.1820%" y="399.50">&lt;&amp;c..</text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (19 samples, 2.31%)</title><rect x="69.7816%" y="373" width="2.3058%" height="15" fill="rgb(224,206,25)" fg:x="575" fg:w="19"/><text x="70.0316%" y="383.50">c..</text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (4 samples, 0.49%)</title><rect x="71.6019%" y="357" width="0.4854%" height="15" fill="rgb(243,201,19)" fg:x="590" fg:w="4"/><text x="71.8519%" y="367.50"></text></g><g><title>&lt;libp2p_noise::Config as libp2p_core::upgrade::OutboundConnectionUpgrade&lt;T&gt;&gt;::upgrade_outbound::_{{closure}} (32 samples, 3.88%)</title><rect x="68.3252%" y="517" width="3.8835%" height="15" fill="rgb(236,59,4)" fg:x="563" fg:w="32"/><text x="68.5752%" y="527.50">&lt;lib..</text></g><g><title>libp2p_noise::io::handshake::recv_identity::_{{closure}} (27 samples, 3.28%)</title><rect x="68.9320%" y="501" width="3.2767%" height="15" fill="rgb(254,179,45)" fg:x="568" fg:w="27"/><text x="69.1820%" y="511.50">lib..</text></g><g><title>&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (27 samples, 3.28%)</title><rect x="68.9320%" y="485" width="3.2767%" height="15" fill="rgb(226,14,10)" fg:x="568" fg:w="27"/><text x="69.1820%" y="495.50">&lt;as..</text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::handshakestate::HandshakeState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (27 samples, 3.28%)</title><rect x="68.9320%" y="469" width="3.2767%" height="15" fill="rgb(244,27,41)" fg:x="568" fg:w="27"/><text x="69.1820%" y="479.50">&lt;li..</text></g><g><title>snow::handshakestate::HandshakeState::read_message (27 samples, 3.28%)</title><rect x="68.9320%" y="453" width="3.2767%" height="15" fill="rgb(235,35,32)" fg:x="568" fg:w="27"/><text x="69.1820%" y="463.50">sno..</text></g><g><title>snow::types::Hash::hkdf (1 samples, 0.12%)</title><rect x="72.0874%" y="437" width="0.1214%" height="15" fill="rgb(218,68,31)" fg:x="594" fg:w="1"/><text x="72.3374%" y="447.50"></text></g><g><title>snow::types::Hash::hmac (1 samples, 0.12%)</title><rect x="72.0874%" y="421" width="0.1214%" height="15" fill="rgb(207,120,37)" fg:x="594" fg:w="1"/><text x="72.3374%" y="431.50"></text></g><g><title>ring::digest::Context::update (1 samples, 0.12%)</title><rect x="72.0874%" y="405" width="0.1214%" height="15" fill="rgb(227,98,0)" fg:x="594" fg:w="1"/><text x="72.3374%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="72.0874%" y="389" width="0.1214%" height="15" fill="rgb(207,7,3)" fg:x="594" fg:w="1"/><text x="72.3374%" y="399.50"></text></g><g><title>&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::listen_protocol (9 samples, 1.09%)</title><rect x="72.2087%" y="517" width="1.0922%" height="15" fill="rgb(206,98,19)" fg:x="595" fg:w="9"/><text x="72.4587%" y="527.50"></text></g><g><title>[libc.so.6] (9 samples, 1.09%)</title><rect x="72.2087%" y="501" width="1.0922%" height="15" fill="rgb(217,5,26)" fg:x="595" fg:w="9"/><text x="72.4587%" y="511.50"></text></g><g><title>&lt;libp2p_tcp::provider::tokio::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="73.3010%" y="517" width="0.1214%" height="15" fill="rgb(235,190,38)" fg:x="604" fg:w="1"/><text x="73.5510%" y="527.50"></text></g><g><title>&lt;libp2p_yamux::Muxer&lt;C&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_inbound (1 samples, 0.12%)</title><rect x="73.4223%" y="517" width="0.1214%" height="15" fill="rgb(247,86,24)" fg:x="605" fg:w="1"/><text x="73.6723%" y="527.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (1 samples, 0.12%)</title><rect x="73.5437%" y="437" width="0.1214%" height="15" fill="rgb(205,101,16)" fg:x="606" fg:w="1"/><text x="73.7937%" y="447.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.12%)</title><rect x="73.5437%" y="421" width="0.1214%" height="15" fill="rgb(246,168,33)" fg:x="606" fg:w="1"/><text x="73.7937%" y="431.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base_clamped (3 samples, 0.36%)</title><rect x="73.5437%" y="469" width="0.3641%" height="15" fill="rgb(231,114,1)" fg:x="606" fg:w="3"/><text x="73.7937%" y="479.50"></text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsBasepointTable as curve25519_dalek::traits::BasepointTable&gt;::mul_base (3 samples, 0.36%)</title><rect x="73.5437%" y="453" width="0.3641%" height="15" fill="rgb(207,184,53)" fg:x="606" fg:w="3"/><text x="73.7937%" y="463.50"></text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (2 samples, 0.24%)</title><rect x="73.6650%" y="437" width="0.2427%" height="15" fill="rgb(224,95,51)" fg:x="607" fg:w="2"/><text x="73.9150%" y="447.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (1 samples, 0.12%)</title><rect x="73.7864%" y="421" width="0.1214%" height="15" fill="rgb(212,188,45)" fg:x="608" fg:w="1"/><text x="74.0364%" y="431.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.12%)</title><rect x="73.9078%" y="437" width="0.1214%" height="15" fill="rgb(223,154,38)" fg:x="609" fg:w="1"/><text x="74.1578%" y="447.50"></text></g><g><title>&lt;x25519_dalek::x25519::PublicKey as core::convert::From&lt;&amp;x25519_dalek::x25519::StaticSecret&gt;&gt;::from (5 samples, 0.61%)</title><rect x="73.5437%" y="485" width="0.6068%" height="15" fill="rgb(251,22,52)" fg:x="606" fg:w="5"/><text x="73.7937%" y="495.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_montgomery (2 samples, 0.24%)</title><rect x="73.9078%" y="469" width="0.2427%" height="15" fill="rgb(229,209,22)" fg:x="609" fg:w="2"/><text x="74.1578%" y="479.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (2 samples, 0.24%)</title><rect x="73.9078%" y="453" width="0.2427%" height="15" fill="rgb(234,138,34)" fg:x="609" fg:w="2"/><text x="74.1578%" y="463.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.12%)</title><rect x="74.0291%" y="437" width="0.1214%" height="15" fill="rgb(212,95,11)" fg:x="610" fg:w="1"/><text x="74.2791%" y="447.50"></text></g><g><title>pqc_kyber::api::encapsulate (2 samples, 0.24%)</title><rect x="74.1505%" y="485" width="0.2427%" height="15" fill="rgb(240,179,47)" fg:x="611" fg:w="2"/><text x="74.4005%" y="495.50"></text></g><g><title>pqc_kyber::reference::fips202::sha3_256 (2 samples, 0.24%)</title><rect x="74.1505%" y="469" width="0.2427%" height="15" fill="rgb(240,163,11)" fg:x="611" fg:w="2"/><text x="74.4005%" y="479.50"></text></g><g><title>_ZN9pqc_kyber9reference7fips20218keccak_absorb_once17hc2df18033ff20a9aE.llvm.12410345712945867385 (2 samples, 0.24%)</title><rect x="74.1505%" y="453" width="0.2427%" height="15" fill="rgb(236,37,12)" fg:x="611" fg:w="2"/><text x="74.4005%" y="463.50"></text></g><g><title>_ZN9pqc_kyber9reference7fips20224keccakf1600_statepermute17hccba6e225936a416E.llvm.12410345712945867385 (2 samples, 0.24%)</title><rect x="74.1505%" y="437" width="0.2427%" height="15" fill="rgb(232,164,16)" fg:x="611" fg:w="2"/><text x="74.4005%" y="447.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (4 samples, 0.49%)</title><rect x="74.5146%" y="421" width="0.4854%" height="15" fill="rgb(244,205,15)" fg:x="614" fg:w="4"/><text x="74.7646%" y="431.50"></text></g><g><title>crypto::enc::KeyPair::encapsulate (14 samples, 1.70%)</title><rect x="73.5437%" y="501" width="1.6990%" height="15" fill="rgb(223,117,47)" fg:x="606" fg:w="14"/><text x="73.7937%" y="511.50"></text></g><g><title>x25519_dalek::x25519::StaticSecret::diffie_hellman (7 samples, 0.85%)</title><rect x="74.3932%" y="485" width="0.8495%" height="15" fill="rgb(244,107,35)" fg:x="613" fg:w="7"/><text x="74.6432%" y="495.50"></text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (7 samples, 0.85%)</title><rect x="74.3932%" y="469" width="0.8495%" height="15" fill="rgb(205,140,8)" fg:x="613" fg:w="7"/><text x="74.6432%" y="479.50"></text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (7 samples, 0.85%)</title><rect x="74.3932%" y="453" width="0.8495%" height="15" fill="rgb(228,84,46)" fg:x="613" fg:w="7"/><text x="74.6432%" y="463.50"></text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (6 samples, 0.73%)</title><rect x="74.5146%" y="437" width="0.7282%" height="15" fill="rgb(254,188,9)" fg:x="614" fg:w="6"/><text x="74.7646%" y="447.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2 samples, 0.24%)</title><rect x="75.0000%" y="421" width="0.2427%" height="15" fill="rgb(206,112,54)" fg:x="618" fg:w="2"/><text x="75.2500%" y="431.50"></text></g><g><title>&lt;onion::handler::OUpgrade as libp2p_core::upgrade::OutboundUpgrade&lt;libp2p_swarm::stream::Stream&gt;&gt;::upgrade_outbound::_{{closure}} (15 samples, 1.82%)</title><rect x="73.5437%" y="517" width="1.8204%" height="15" fill="rgb(216,84,49)" fg:x="606" fg:w="15"/><text x="73.7937%" y="527.50">&lt;..</text></g><g><title>crypto::enc::KeyPair::public_key (1 samples, 0.12%)</title><rect x="75.2427%" y="501" width="0.1214%" height="15" fill="rgb(214,194,35)" fg:x="620" fg:w="1"/><text x="75.4927%" y="511.50"></text></g><g><title>&lt;x25519_dalek::x25519::PublicKey as core::convert::From&lt;&amp;x25519_dalek::x25519::StaticSecret&gt;&gt;::from (1 samples, 0.12%)</title><rect x="75.2427%" y="485" width="0.1214%" height="15" fill="rgb(249,28,3)" fg:x="620" fg:w="1"/><text x="75.4927%" y="495.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base_clamped (1 samples, 0.12%)</title><rect x="75.2427%" y="469" width="0.1214%" height="15" fill="rgb(222,56,52)" fg:x="620" fg:w="1"/><text x="75.4927%" y="479.50"></text></g><g><title>&lt;curve25519_dalek::edwards::EdwardsBasepointTable as curve25519_dalek::traits::BasepointTable&gt;::mul_base (1 samples, 0.12%)</title><rect x="75.2427%" y="453" width="0.1214%" height="15" fill="rgb(245,217,50)" fg:x="620" fg:w="1"/><text x="75.4927%" y="463.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (1 samples, 0.12%)</title><rect x="75.2427%" y="437" width="0.1214%" height="15" fill="rgb(213,201,24)" fg:x="620" fg:w="1"/><text x="75.4927%" y="447.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.12%)</title><rect x="75.2427%" y="421" width="0.1214%" height="15" fill="rgb(248,116,28)" fg:x="620" fg:w="1"/><text x="75.4927%" y="431.50"></text></g><g><title>&lt;snow::resolvers::ring::HashSHA256 as snow::types::Hash&gt;::result (1 samples, 0.12%)</title><rect x="75.3641%" y="517" width="0.1214%" height="15" fill="rgb(219,72,43)" fg:x="621" fg:w="1"/><text x="75.6141%" y="527.50"></text></g><g><title>[libc.so.6] (2 samples, 0.24%)</title><rect x="75.4854%" y="517" width="0.2427%" height="15" fill="rgb(209,138,14)" fg:x="622" fg:w="2"/><text x="75.7354%" y="527.50"></text></g><g><title>&lt;T as libp2p_core::transport::boxed::Abstract&lt;O&gt;&gt;::poll (1 samples, 0.12%)</title><rect x="76.2136%" y="501" width="0.1214%" height="15" fill="rgb(222,18,33)" fg:x="628" fg:w="1"/><text x="76.4636%" y="511.50"></text></g><g><title>&lt;libp2p_core::transport::and_then::AndThen&lt;T,C&gt; as libp2p_core::transport::Transport&gt;::poll (1 samples, 0.12%)</title><rect x="76.2136%" y="485" width="0.1214%" height="15" fill="rgb(213,199,7)" fg:x="628" fg:w="1"/><text x="76.4636%" y="495.50"></text></g><g><title>&lt;libp2p_tcp::Transport&lt;T&gt; as libp2p_core::transport::Transport&gt;::poll (1 samples, 0.12%)</title><rect x="76.2136%" y="469" width="0.1214%" height="15" fill="rgb(250,110,10)" fg:x="628" fg:w="1"/><text x="76.4636%" y="479.50"></text></g><g><title>&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="76.2136%" y="453" width="0.1214%" height="15" fill="rgb(248,123,6)" fg:x="628" fg:w="1"/><text x="76.4636%" y="463.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="76.2136%" y="437" width="0.1214%" height="15" fill="rgb(206,91,31)" fg:x="628" fg:w="1"/><text x="76.4636%" y="447.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (1 samples, 0.12%)</title><rect x="76.2136%" y="421" width="0.1214%" height="15" fill="rgb(211,154,13)" fg:x="628" fg:w="1"/><text x="76.4636%" y="431.50"></text></g><g><title>&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::handle_established_outbound_connection (1 samples, 0.12%)</title><rect x="76.3350%" y="501" width="0.1214%" height="15" fill="rgb(225,148,7)" fg:x="629" fg:w="1"/><text x="76.5850%" y="511.50"></text></g><g><title>&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (2 samples, 0.24%)</title><rect x="76.4563%" y="501" width="0.2427%" height="15" fill="rgb(220,160,43)" fg:x="630" fg:w="2"/><text x="76.7063%" y="511.50"></text></g><g><title>libp2p_kad::behaviour::Behaviour&lt;TStore&gt;::discovered (2 samples, 0.24%)</title><rect x="76.4563%" y="485" width="0.2427%" height="15" fill="rgb(213,52,39)" fg:x="630" fg:w="2"/><text x="76.7063%" y="495.50"></text></g><g><title>libp2p_kad::query::Query&lt;TInner&gt;::on_success (1 samples, 0.12%)</title><rect x="76.5777%" y="469" width="0.1214%" height="15" fill="rgb(243,137,7)" fg:x="631" fg:w="1"/><text x="76.8277%" y="479.50"></text></g><g><title>libp2p_kad::query::peers::closest::ClosestPeersIter::on_success (1 samples, 0.12%)</title><rect x="76.5777%" y="453" width="0.1214%" height="15" fill="rgb(230,79,13)" fg:x="631" fg:w="1"/><text x="76.8277%" y="463.50"></text></g><g><title>&lt;libp2p_kad::kbucket::key::Key&lt;libp2p_identity::peer_id::PeerId&gt; as core::convert::From&lt;libp2p_identity::peer_id::PeerId&gt;&gt;::from (1 samples, 0.12%)</title><rect x="76.5777%" y="437" width="0.1214%" height="15" fill="rgb(247,105,23)" fg:x="631" fg:w="1"/><text x="76.8277%" y="447.50"></text></g><g><title>libp2p_identity::peer_id::PeerId::to_bytes (1 samples, 0.12%)</title><rect x="76.5777%" y="421" width="0.1214%" height="15" fill="rgb(223,179,41)" fg:x="631" fg:w="1"/><text x="76.8277%" y="431.50"></text></g><g><title>multihash::multihash::Multihash&lt;_&gt;::to_bytes (1 samples, 0.12%)</title><rect x="76.5777%" y="405" width="0.1214%" height="15" fill="rgb(218,9,34)" fg:x="631" fg:w="1"/><text x="76.8277%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="76.5777%" y="389" width="0.1214%" height="15" fill="rgb(222,106,8)" fg:x="631" fg:w="1"/><text x="76.8277%" y="399.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hb878d25d38ed5cf4E.llvm.15393854667011658727 (1 samples, 0.12%)</title><rect x="76.5777%" y="373" width="0.1214%" height="15" fill="rgb(211,220,0)" fg:x="631" fg:w="1"/><text x="76.8277%" y="383.50"></text></g><g><title>realloc (1 samples, 0.12%)</title><rect x="76.5777%" y="357" width="0.1214%" height="15" fill="rgb(229,52,16)" fg:x="631" fg:w="1"/><text x="76.8277%" y="367.50"></text></g><g><title>&lt;onion::behaviour::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (1 samples, 0.12%)</title><rect x="76.6990%" y="501" width="0.1214%" height="15" fill="rgb(212,155,18)" fg:x="632" fg:w="1"/><text x="76.9490%" y="511.50"></text></g><g><title>cfree (1 samples, 0.12%)</title><rect x="76.6990%" y="485" width="0.1214%" height="15" fill="rgb(242,21,14)" fg:x="632" fg:w="1"/><text x="76.9490%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="76.6990%" y="469" width="0.1214%" height="15" fill="rgb(222,19,48)" fg:x="632" fg:w="1"/><text x="76.9490%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="76.6990%" y="453" width="0.1214%" height="15" fill="rgb(232,45,27)" fg:x="632" fg:w="1"/><text x="76.9490%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="76.6990%" y="437" width="0.1214%" height="15" fill="rgb(249,103,42)" fg:x="632" fg:w="1"/><text x="76.9490%" y="447.50"></text></g><g><title>&lt;onion::behaviour::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (2 samples, 0.24%)</title><rect x="76.8204%" y="501" width="0.2427%" height="15" fill="rgb(246,81,33)" fg:x="633" fg:w="2"/><text x="77.0704%" y="511.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.24%)</title><rect x="76.8204%" y="485" width="0.2427%" height="15" fill="rgb(252,33,42)" fg:x="633" fg:w="2"/><text x="77.0704%" y="495.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (2 samples, 0.24%)</title><rect x="76.8204%" y="469" width="0.2427%" height="15" fill="rgb(209,212,41)" fg:x="633" fg:w="2"/><text x="77.0704%" y="479.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.12%)</title><rect x="77.0631%" y="501" width="0.1214%" height="15" fill="rgb(207,154,6)" fg:x="635" fg:w="1"/><text x="77.3131%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="77.0631%" y="485" width="0.1214%" height="15" fill="rgb(223,64,47)" fg:x="635" fg:w="1"/><text x="77.3131%" y="495.50"></text></g><g><title>_ZN6either6Either4Left17h6cfc31610d4d4eacE.llvm.4575741421676978398 (1 samples, 0.12%)</title><rect x="77.0631%" y="469" width="0.1214%" height="15" fill="rgb(211,161,38)" fg:x="635" fg:w="1"/><text x="77.3131%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="77.1845%" y="501" width="0.1214%" height="15" fill="rgb(219,138,40)" fg:x="636" fg:w="1"/><text x="77.4345%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="77.7913%" y="485" width="0.1214%" height="15" fill="rgb(241,228,46)" fg:x="641" fg:w="1"/><text x="78.0413%" y="495.50"></text></g><g><title>_ZN5onion9behaviour9Behaviour14create_handler17h61a8d7d352373a68E.llvm.16281753675103710075 (6 samples, 0.73%)</title><rect x="77.3058%" y="501" width="0.7282%" height="15" fill="rgb(223,209,38)" fg:x="637" fg:w="6"/><text x="77.5558%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.12%)</title><rect x="77.9126%" y="485" width="0.1214%" height="15" fill="rgb(236,164,45)" fg:x="642" fg:w="1"/><text x="78.1626%" y="495.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h6d22309e8ef527a5E.llvm.4266619609124614151 (1 samples, 0.12%)</title><rect x="77.9126%" y="469" width="0.1214%" height="15" fill="rgb(231,15,5)" fg:x="642" fg:w="1"/><text x="78.1626%" y="479.50"></text></g><g><title>realloc (1 samples, 0.12%)</title><rect x="77.9126%" y="453" width="0.1214%" height="15" fill="rgb(252,35,15)" fg:x="642" fg:w="1"/><text x="78.1626%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="77.9126%" y="437" width="0.1214%" height="15" fill="rgb(248,181,18)" fg:x="642" fg:w="1"/><text x="78.1626%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="77.9126%" y="421" width="0.1214%" height="15" fill="rgb(233,39,42)" fg:x="642" fg:w="1"/><text x="78.1626%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (1 samples, 0.12%)</title><rect x="78.0340%" y="501" width="0.1214%" height="15" fill="rgb(238,110,33)" fg:x="643" fg:w="1"/><text x="78.2840%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.73%)</title><rect x="78.1553%" y="501" width="0.7282%" height="15" fill="rgb(233,195,10)" fg:x="644" fg:w="6"/><text x="78.4053%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.73%)</title><rect x="78.1553%" y="485" width="0.7282%" height="15" fill="rgb(254,105,3)" fg:x="644" fg:w="6"/><text x="78.4053%" y="495.50"></text></g><g><title>_ZN12libp2p_swarm23Swarm$LT$TBehaviour$GT$4dial28_$u7b$$u7b$closure$u7d$$u7d$17h95f5ffffa1773a75E.llvm.16281753675103710075 (6 samples, 0.73%)</title><rect x="78.1553%" y="469" width="0.7282%" height="15" fill="rgb(221,225,9)" fg:x="644" fg:w="6"/><text x="78.4053%" y="479.50"></text></g><g><title>&lt;T as libp2p_core::transport::boxed::Abstract&lt;O&gt;&gt;::dial (6 samples, 0.73%)</title><rect x="78.1553%" y="453" width="0.7282%" height="15" fill="rgb(224,227,45)" fg:x="644" fg:w="6"/><text x="78.4053%" y="463.50"></text></g><g><title>&lt;libp2p_core::transport::and_then::AndThen&lt;T,C&gt; as libp2p_core::transport::Transport&gt;::dial (5 samples, 0.61%)</title><rect x="78.2767%" y="437" width="0.6068%" height="15" fill="rgb(229,198,43)" fg:x="645" fg:w="5"/><text x="78.5267%" y="447.50"></text></g><g><title>&lt;libp2p_tcp::Transport&lt;T&gt; as libp2p_core::transport::Transport&gt;::dial (5 samples, 0.61%)</title><rect x="78.2767%" y="421" width="0.6068%" height="15" fill="rgb(206,209,35)" fg:x="645" fg:w="5"/><text x="78.5267%" y="431.50"></text></g><g><title>libp2p_tcp::Transport&lt;T&gt;::create_socket (5 samples, 0.61%)</title><rect x="78.2767%" y="405" width="0.6068%" height="15" fill="rgb(245,195,53)" fg:x="645" fg:w="5"/><text x="78.5267%" y="415.50"></text></g><g><title>socket2::socket::Socket::new (2 samples, 0.24%)</title><rect x="78.6408%" y="389" width="0.2427%" height="15" fill="rgb(240,92,26)" fg:x="648" fg:w="2"/><text x="78.8908%" y="399.50"></text></g><g><title>__socket (1 samples, 0.12%)</title><rect x="78.7621%" y="373" width="0.1214%" height="15" fill="rgb(207,40,23)" fg:x="649" fg:w="1"/><text x="79.0121%" y="383.50"></text></g><g><title>cfree (1 samples, 0.12%)</title><rect x="78.8835%" y="501" width="0.1214%" height="15" fill="rgb(223,111,35)" fg:x="650" fg:w="1"/><text x="79.1335%" y="511.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (1 samples, 0.12%)</title><rect x="79.0049%" y="501" width="0.1214%" height="15" fill="rgb(229,147,28)" fg:x="651" fg:w="1"/><text x="79.2549%" y="511.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.12%)</title><rect x="79.0049%" y="485" width="0.1214%" height="15" fill="rgb(211,29,28)" fg:x="651" fg:w="1"/><text x="79.2549%" y="495.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.12%)</title><rect x="79.0049%" y="469" width="0.1214%" height="15" fill="rgb(228,72,33)" fg:x="651" fg:w="1"/><text x="79.2549%" y="479.50"></text></g><g><title>libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::add_incoming (1 samples, 0.12%)</title><rect x="79.1262%" y="501" width="0.1214%" height="15" fill="rgb(205,214,31)" fg:x="652" fg:w="1"/><text x="79.3762%" y="511.50"></text></g><g><title>&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="79.2476%" y="485" width="0.1214%" height="15" fill="rgb(224,111,15)" fg:x="653" fg:w="1"/><text x="79.4976%" y="495.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="79.2476%" y="469" width="0.1214%" height="15" fill="rgb(253,21,26)" fg:x="653" fg:w="1"/><text x="79.4976%" y="479.50"></text></g><g><title>&lt;futures_util::stream::stream::into_future::StreamFuture&lt;St&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="79.2476%" y="453" width="0.1214%" height="15" fill="rgb(245,139,43)" fg:x="653" fg:w="1"/><text x="79.4976%" y="463.50"></text></g><g><title>_ZN15futures_channel4mpsc17Receiver$LT$T$GT$12next_message17hf41e6ee7c35c91a8E.llvm.7068707603207121957 (1 samples, 0.12%)</title><rect x="79.2476%" y="437" width="0.1214%" height="15" fill="rgb(252,170,7)" fg:x="653" fg:w="1"/><text x="79.4976%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="79.2476%" y="421" width="0.1214%" height="15" fill="rgb(231,118,14)" fg:x="653" fg:w="1"/><text x="79.4976%" y="431.50"></text></g><g><title>libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::poll (2 samples, 0.24%)</title><rect x="79.2476%" y="501" width="0.2427%" height="15" fill="rgb(238,83,0)" fg:x="653" fg:w="2"/><text x="79.4976%" y="511.50"></text></g><g><title>libp2p_swarm::connection::pool::ExecSwitch::advance_local (1 samples, 0.12%)</title><rect x="79.3689%" y="485" width="0.1214%" height="15" fill="rgb(221,39,39)" fg:x="654" fg:w="1"/><text x="79.6189%" y="495.50"></text></g><g><title>_ZN12libp2p_swarm23Swarm$LT$TBehaviour$GT$15poll_next_event17h60fce4822c638dd2E.llvm.7618923439507394949 (32 samples, 3.88%)</title><rect x="75.7282%" y="517" width="3.8835%" height="15" fill="rgb(222,119,46)" fg:x="624" fg:w="32"/><text x="75.9782%" y="527.50">_ZN1..</text></g><g><title>libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::spawn_connection (1 samples, 0.12%)</title><rect x="79.4903%" y="501" width="0.1214%" height="15" fill="rgb(222,165,49)" fg:x="655" fg:w="1"/><text x="79.7403%" y="511.50"></text></g><g><title>_ZN15futures_channel4mpsc17Receiver$LT$T$GT$12next_message17he2064cbf40ebefd5E.llvm.7068707603207121957 (1 samples, 0.12%)</title><rect x="79.6117%" y="517" width="0.1214%" height="15" fill="rgb(219,113,52)" fg:x="656" fg:w="1"/><text x="79.8617%" y="527.50"></text></g><g><title>_ZN5onion5tests11settle_down28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h3d43c7970b400d26E.llvm.7912103172253084985 (1 samples, 0.12%)</title><rect x="79.7330%" y="517" width="0.1214%" height="15" fill="rgb(214,7,15)" fg:x="657" fg:w="1"/><text x="79.9830%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="79.7330%" y="501" width="0.1214%" height="15" fill="rgb(235,32,4)" fg:x="657" fg:w="1"/><text x="79.9830%" y="511.50"></text></g><g><title>_ZN5onion5tests11settle_down28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hcc8c7754c1da2718E.llvm.7912103172253084985 (2 samples, 0.24%)</title><rect x="79.8544%" y="517" width="0.2427%" height="15" fill="rgb(238,90,54)" fg:x="658" fg:w="2"/><text x="80.1044%" y="527.50"></text></g><g><title>component_utils::kad::handle_conn_request (2 samples, 0.24%)</title><rect x="79.8544%" y="501" width="0.2427%" height="15" fill="rgb(213,208,19)" fg:x="658" fg:w="2"/><text x="80.1044%" y="511.50"></text></g><g><title>&lt;libp2p_kad::kbucket::ClosestIter&lt;TTarget,TKey,TVal,TMap,TOut&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.24%)</title><rect x="79.8544%" y="485" width="0.2427%" height="15" fill="rgb(233,156,4)" fg:x="658" fg:w="2"/><text x="80.1044%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.24%)</title><rect x="79.8544%" y="469" width="0.2427%" height="15" fill="rgb(207,194,5)" fg:x="658" fg:w="2"/><text x="80.1044%" y="479.50"></text></g><g><title>_ZN5tokio7runtime4task3raw4poll17h0dafc95fa410b2dcE.llvm.7912103172253084985 (1 samples, 0.12%)</title><rect x="80.0971%" y="517" width="0.1214%" height="15" fill="rgb(206,111,30)" fg:x="660" fg:w="1"/><text x="80.3471%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (1 samples, 0.12%)</title><rect x="80.0971%" y="501" width="0.1214%" height="15" fill="rgb(243,70,54)" fg:x="660" fg:w="1"/><text x="80.3471%" y="511.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17hbbf06b9f73b6cd1bE.llvm.17073567277356765837 (1 samples, 0.12%)</title><rect x="80.2184%" y="517" width="0.1214%" height="15" fill="rgb(242,28,8)" fg:x="661" fg:w="1"/><text x="80.4684%" y="527.50"></text></g><g><title>&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="80.3398%" y="501" width="0.1214%" height="15" fill="rgb(219,106,18)" fg:x="662" fg:w="1"/><text x="80.5898%" y="511.50"></text></g><g><title>&lt;&amp;mut S as futures_sink::Sink&lt;Item&gt;&gt;::start_send (1 samples, 0.12%)</title><rect x="80.3398%" y="485" width="0.1214%" height="15" fill="rgb(244,222,10)" fg:x="662" fg:w="1"/><text x="80.5898%" y="495.50"></text></g><g><title>_ZN91_$LT$tracing..instrument..Instrumented$LT$T$GT$$u20$as$u20$core..future..future..Future$GT$4poll17h10aa560948a86422E.llvm.17216950514258637072 (3 samples, 0.36%)</title><rect x="80.3398%" y="517" width="0.3641%" height="15" fill="rgb(236,179,52)" fg:x="662" fg:w="3"/><text x="80.5898%" y="527.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (2 samples, 0.24%)</title><rect x="80.4612%" y="501" width="0.2427%" height="15" fill="rgb(213,23,39)" fg:x="663" fg:w="2"/><text x="80.7112%" y="511.50"></text></g><g><title>_ZN15futures_channel4mpsc17Receiver$LT$T$GT$12next_message17he2064cbf40ebefd5E.llvm.7068707603207121957 (2 samples, 0.24%)</title><rect x="80.4612%" y="485" width="0.2427%" height="15" fill="rgb(238,48,10)" fg:x="663" fg:w="2"/><text x="80.7112%" y="495.50"></text></g><g><title>core::slice::sort::merge_sort (1 samples, 0.12%)</title><rect x="80.7039%" y="517" width="0.1214%" height="15" fill="rgb(251,196,23)" fg:x="665" fg:w="1"/><text x="80.9539%" y="527.50"></text></g><g><title>pqc_kyber::reference::polyvec::polyvec_basemul_acc_montgomery (2 samples, 0.24%)</title><rect x="80.8252%" y="469" width="0.2427%" height="15" fill="rgb(250,152,24)" fg:x="666" fg:w="2"/><text x="81.0752%" y="479.50"></text></g><g><title>crypto::enc::KeyPair::decapsulate (4 samples, 0.49%)</title><rect x="80.8252%" y="517" width="0.4854%" height="15" fill="rgb(209,150,17)" fg:x="666" fg:w="4"/><text x="81.0752%" y="527.50"></text></g><g><title>pqc_kyber::api::decapsulate (4 samples, 0.49%)</title><rect x="80.8252%" y="501" width="0.4854%" height="15" fill="rgb(234,202,34)" fg:x="666" fg:w="4"/><text x="81.0752%" y="511.50"></text></g><g><title>pqc_kyber::kem::crypto_kem_dec (4 samples, 0.49%)</title><rect x="80.8252%" y="485" width="0.4854%" height="15" fill="rgb(253,148,53)" fg:x="666" fg:w="4"/><text x="81.0752%" y="495.50"></text></g><g><title>pqc_kyber::reference::polyvec::polyvec_ntt (2 samples, 0.24%)</title><rect x="81.0680%" y="469" width="0.2427%" height="15" fill="rgb(218,129,16)" fg:x="668" fg:w="2"/><text x="81.3180%" y="479.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.12%)</title><rect x="81.3107%" y="517" width="0.1214%" height="15" fill="rgb(216,85,19)" fg:x="670" fg:w="1"/><text x="81.5607%" y="527.50"></text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (3 samples, 0.36%)</title><rect x="81.4320%" y="517" width="0.3641%" height="15" fill="rgb(235,228,7)" fg:x="671" fg:w="3"/><text x="81.6820%" y="527.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1 samples, 0.12%)</title><rect x="81.7961%" y="517" width="0.1214%" height="15" fill="rgb(245,175,0)" fg:x="674" fg:w="1"/><text x="82.0461%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.24%)</title><rect x="82.2816%" y="469" width="0.2427%" height="15" fill="rgb(208,168,36)" fg:x="678" fg:w="2"/><text x="82.5316%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.36%)</title><rect x="82.2816%" y="501" width="0.3641%" height="15" fill="rgb(246,171,24)" fg:x="678" fg:w="3"/><text x="82.5316%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.36%)</title><rect x="82.2816%" y="485" width="0.3641%" height="15" fill="rgb(215,142,24)" fg:x="678" fg:w="3"/><text x="82.5316%" y="495.50"></text></g><g><title>_ZN6either6Either4Left17h604373265f685368E.llvm.4575741421676978398 (1 samples, 0.12%)</title><rect x="82.5243%" y="469" width="0.1214%" height="15" fill="rgb(250,187,7)" fg:x="680" fg:w="1"/><text x="82.7743%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;libp2p_swarm::connection::StreamUpgrade&lt;(((),()),()),futures_util::future::either::Either&lt;futures_util::future::either::Either&lt;core::option::Option&lt;onion::handler::IncomingOrResponse&gt;,futures_util::future::either::Either&lt;asynchronous_codec::framed::Framed&lt;libp2p_swarm::stream::Stream,libp2p_kad::protocol::Codec&lt;libp2p_kad::protocol::KadResponseMsg,libp2p_kad::protocol::KadRequestMsg&gt;&gt;,void::Void&gt;&gt;,futures_util::future::either::Either&lt;libp2p_swarm::stream::Stream,libp2p_swarm::stream::Stream&gt;&gt;,either::Either&lt;either::Either&lt;onion::handler::IUpgradeError,either::Either&lt;std::io::error::Error,void::Void&gt;&gt;,either::Either&lt;void::Void,void::Void&gt;&gt;&gt;&gt;&gt; (1 samples, 0.12%)</title><rect x="82.7670%" y="485" width="0.1214%" height="15" fill="rgb(228,66,33)" fg:x="682" fg:w="1"/><text x="83.0170%" y="495.50"></text></g><g><title>_ZN4core3ptr201drop_in_place$LT$core..option..Option$LT$libp2p_swarm..connection..StreamUpgrade$LT$$LP$$RP$$C$core..option..Option$LT$onion..handler..IncomingOrResponse$GT$$C$onion..handler..IUpgradeError$GT$$GT$$GT$17h36298b37ee4fc278E.llvm.3034010223084482713 (1 samples, 0.12%)</title><rect x="82.7670%" y="469" width="0.1214%" height="15" fill="rgb(234,215,21)" fg:x="682" fg:w="1"/><text x="83.0170%" y="479.50"></text></g><g><title>&lt;futures_timer::native::delay::Delay as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="82.7670%" y="453" width="0.1214%" height="15" fill="rgb(222,191,20)" fg:x="682" fg:w="1"/><text x="83.0170%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;libp2p_swarm::connection::StreamUpgrade&lt;either::Either&lt;either::Either&lt;(onion::behaviour::PathId,libp2p_identity::peer_id::PeerId,bool),()&gt;,()&gt;,futures_util::future::either::Either&lt;futures_util::future::either::Either&lt;onion::handler::ChannelMeta,asynchronous_codec::framed::Framed&lt;libp2p_swarm::stream::Stream,libp2p_kad::protocol::Codec&lt;libp2p_kad::protocol::KadRequestMsg,libp2p_kad::protocol::KadResponseMsg&gt;&gt;&gt;,futures_util::future::either::Either&lt;libp2p_swarm::stream::Stream,libp2p_swarm::stream::Stream&gt;&gt;,either::Either&lt;either::Either&lt;onion::handler::OUpgradeError,std::io::error::Error&gt;,either::Either&lt;void::Void,void::Void&gt;&gt;&gt;&gt;&gt; (1 samples, 0.12%)</title><rect x="82.8883%" y="485" width="0.1214%" height="15" fill="rgb(245,79,54)" fg:x="683" fg:w="1"/><text x="83.1383%" y="495.50"></text></g><g><title>_ZN4core3ptr793drop_in_place$LT$core..option..Option$LT$libp2p_swarm..connection..StreamUpgrade$LT$either..Either$LT$either..Either$LT$$LP$onion..behaviour..PathId$C$libp2p_identity..peer_id..PeerId$C$bool$RP$$C$$LP$$RP$$GT$$C$$LP$$RP$$GT$$C$futures_util..future..either..Either$LT$futures_util..future..either..Either$LT$onion..handler..ChannelMeta$C$asynchronous_codec..framed..Framed$LT$libp2p_swarm..stream..Stream$C$libp2p_kad..protocol..Codec$LT$libp2p_kad..protocol..KadRequestMsg$C$libp2p_kad..protocol..KadResponseMsg$GT$$GT$$GT$$C$futures_util..future..either..Either$LT$libp2p_swarm..stream..Stream$C$libp2p_swarm..stream..Stream$GT$$GT$$C$either..Either$LT$either..Either$LT$onion..handler..OUpgradeError$C$std..io..error..Error$GT$$C$either..Either$LT$void..Void$C$void..Void$GT$$GT$$GT$$GT$$GT$17h8b4f2ce8ca52338fE.llvm.3034010223084482713 (1 samples, 0.12%)</title><rect x="82.8883%" y="469" width="0.1214%" height="15" fill="rgb(240,10,37)" fg:x="683" fg:w="1"/><text x="83.1383%" y="479.50"></text></g><g><title>&lt;futures_timer::native::delay::Delay as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="82.8883%" y="453" width="0.1214%" height="15" fill="rgb(214,192,32)" fg:x="683" fg:w="1"/><text x="83.1383%" y="463.50"></text></g><g><title>futures_timer::native::global::raw_wake (1 samples, 0.12%)</title><rect x="82.8883%" y="437" width="0.1214%" height="15" fill="rgb(209,36,54)" fg:x="683" fg:w="1"/><text x="83.1383%" y="447.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.61%)</title><rect x="82.6456%" y="501" width="0.6068%" height="15" fill="rgb(220,10,11)" fg:x="681" fg:w="5"/><text x="82.8956%" y="511.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (2 samples, 0.24%)</title><rect x="83.0097%" y="485" width="0.2427%" height="15" fill="rgb(221,106,17)" fg:x="684" fg:w="2"/><text x="83.2597%" y="495.50"></text></g><g><title>&lt;libp2p_core::muxing::boxed::StreamMuxerBox as libp2p_core::muxing::StreamMuxer&gt;::poll (1 samples, 0.12%)</title><rect x="83.2524%" y="501" width="0.1214%" height="15" fill="rgb(251,142,44)" fg:x="686" fg:w="1"/><text x="83.5024%" y="511.50"></text></g><g><title>&lt;yamux::frame::io::Io&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="83.3738%" y="437" width="0.1214%" height="15" fill="rgb(238,13,15)" fg:x="687" fg:w="1"/><text x="83.6238%" y="447.50"></text></g><g><title>&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="83.3738%" y="421" width="0.1214%" height="15" fill="rgb(208,107,27)" fg:x="687" fg:w="1"/><text x="83.6238%" y="431.50"></text></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="83.3738%" y="405" width="0.1214%" height="15" fill="rgb(205,136,37)" fg:x="687" fg:w="1"/><text x="83.6238%" y="415.50"></text></g><g><title>&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="83.3738%" y="389" width="0.1214%" height="15" fill="rgb(250,205,27)" fg:x="687" fg:w="1"/><text x="83.6238%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="83.3738%" y="373" width="0.1214%" height="15" fill="rgb(210,80,43)" fg:x="687" fg:w="1"/><text x="83.6238%" y="383.50"></text></g><g><title>&lt;libp2p_core::muxing::boxed::StreamMuxerBox as libp2p_core::muxing::StreamMuxer&gt;::poll_inbound (3 samples, 0.36%)</title><rect x="83.3738%" y="501" width="0.3641%" height="15" fill="rgb(247,160,36)" fg:x="687" fg:w="3"/><text x="83.6238%" y="511.50"></text></g><g><title>&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_inbound (3 samples, 0.36%)</title><rect x="83.3738%" y="485" width="0.3641%" height="15" fill="rgb(234,13,49)" fg:x="687" fg:w="3"/><text x="83.6238%" y="495.50"></text></g><g><title>&lt;libp2p_yamux::Muxer&lt;C&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_inbound (3 samples, 0.36%)</title><rect x="83.3738%" y="469" width="0.3641%" height="15" fill="rgb(234,122,0)" fg:x="687" fg:w="3"/><text x="83.6238%" y="479.50"></text></g><g><title>yamux::connection::Connection&lt;T&gt;::poll_next_inbound (3 samples, 0.36%)</title><rect x="83.3738%" y="453" width="0.3641%" height="15" fill="rgb(207,146,38)" fg:x="687" fg:w="3"/><text x="83.6238%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.24%)</title><rect x="83.4951%" y="437" width="0.2427%" height="15" fill="rgb(207,177,25)" fg:x="688" fg:w="2"/><text x="83.7451%" y="447.50"></text></g><g><title>&lt;libp2p_core::muxing::boxed::StreamMuxerBox as libp2p_core::muxing::StreamMuxer&gt;::poll_outbound (1 samples, 0.12%)</title><rect x="83.7379%" y="501" width="0.1214%" height="15" fill="rgb(211,178,42)" fg:x="690" fg:w="1"/><text x="83.9879%" y="511.50"></text></g><g><title>&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_outbound (1 samples, 0.12%)</title><rect x="83.7379%" y="485" width="0.1214%" height="15" fill="rgb(230,69,54)" fg:x="690" fg:w="1"/><text x="83.9879%" y="495.50"></text></g><g><title>&lt;libp2p_yamux::Muxer&lt;C&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_outbound (1 samples, 0.12%)</title><rect x="83.7379%" y="469" width="0.1214%" height="15" fill="rgb(214,135,41)" fg:x="690" fg:w="1"/><text x="83.9879%" y="479.50"></text></g><g><title>yamux::connection::Connection&lt;T&gt;::poll_new_outbound (1 samples, 0.12%)</title><rect x="83.7379%" y="453" width="0.1214%" height="15" fill="rgb(237,67,25)" fg:x="690" fg:w="1"/><text x="83.9879%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="83.7379%" y="437" width="0.1214%" height="15" fill="rgb(222,189,50)" fg:x="690" fg:w="1"/><text x="83.9879%" y="447.50"></text></g><g><title>&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.24%)</title><rect x="83.8592%" y="453" width="0.2427%" height="15" fill="rgb(245,148,34)" fg:x="691" fg:w="2"/><text x="84.1092%" y="463.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.24%)</title><rect x="83.8592%" y="437" width="0.2427%" height="15" fill="rgb(222,29,6)" fg:x="691" fg:w="2"/><text x="84.1092%" y="447.50"></text></g><g><title>_ZN12futures_util6stream17futures_unordered27FuturesUnordered$LT$Fut$GT$12release_task17hce27cd7b0b9a2688E.llvm.3034010223084482713 (1 samples, 0.12%)</title><rect x="83.9806%" y="421" width="0.1214%" height="15" fill="rgb(221,189,43)" fg:x="692" fg:w="1"/><text x="84.2306%" y="431.50"></text></g><g><title>cfree (1 samples, 0.12%)</title><rect x="83.9806%" y="405" width="0.1214%" height="15" fill="rgb(207,36,27)" fg:x="692" fg:w="1"/><text x="84.2306%" y="415.50"></text></g><g><title>bytes::bytes_mut::BytesMut::zeroed (3 samples, 0.36%)</title><rect x="84.3447%" y="373" width="0.3641%" height="15" fill="rgb(217,90,24)" fg:x="695" fg:w="3"/><text x="84.5947%" y="383.50"></text></g><g><title>__libc_calloc (3 samples, 0.36%)</title><rect x="84.3447%" y="357" width="0.3641%" height="15" fill="rgb(224,66,35)" fg:x="695" fg:w="3"/><text x="84.5947%" y="367.50"></text></g><g><title>libp2p_noise::io::framed::decode_length_prefixed (2 samples, 0.24%)</title><rect x="84.7087%" y="373" width="0.2427%" height="15" fill="rgb(221,13,50)" fg:x="698" fg:w="2"/><text x="84.9587%" y="383.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.24%)</title><rect x="84.7087%" y="357" width="0.2427%" height="15" fill="rgb(236,68,49)" fg:x="698" fg:w="2"/><text x="84.9587%" y="367.50"></text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (7 samples, 0.85%)</title><rect x="84.2233%" y="389" width="0.8495%" height="15" fill="rgb(229,146,28)" fg:x="694" fg:w="7"/><text x="84.4733%" y="399.50"></text></g><g><title>snow::transportstate::TransportState::read_message (1 samples, 0.12%)</title><rect x="84.9515%" y="373" width="0.1214%" height="15" fill="rgb(225,31,38)" fg:x="700" fg:w="1"/><text x="85.2015%" y="383.50"></text></g><g><title>&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::decrypt (1 samples, 0.12%)</title><rect x="84.9515%" y="357" width="0.1214%" height="15" fill="rgb(250,208,3)" fg:x="700" fg:w="1"/><text x="85.2015%" y="367.50"></text></g><g><title>ring::aead::less_safe_key::open_within_ (1 samples, 0.12%)</title><rect x="84.9515%" y="341" width="0.1214%" height="15" fill="rgb(246,54,23)" fg:x="700" fg:w="1"/><text x="85.2015%" y="351.50"></text></g><g><title>ring_core_0_17_5_CRYPTO_memcmp (1 samples, 0.12%)</title><rect x="84.9515%" y="325" width="0.1214%" height="15" fill="rgb(243,76,11)" fg:x="700" fg:w="1"/><text x="85.2015%" y="335.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="85.0728%" y="357" width="0.1214%" height="15" fill="rgb(245,21,50)" fg:x="701" fg:w="1"/><text x="85.3228%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.24%)</title><rect x="85.3155%" y="245" width="0.2427%" height="15" fill="rgb(228,9,43)" fg:x="703" fg:w="2"/><text x="85.5655%" y="255.50"></text></g><g><title>recv (4 samples, 0.49%)</title><rect x="85.1942%" y="261" width="0.4854%" height="15" fill="rgb(208,100,47)" fg:x="702" fg:w="4"/><text x="85.4442%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="85.5583%" y="245" width="0.1214%" height="15" fill="rgb(232,26,8)" fg:x="705" fg:w="1"/><text x="85.8083%" y="255.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (5 samples, 0.61%)</title><rect x="85.1942%" y="341" width="0.6068%" height="15" fill="rgb(216,166,38)" fg:x="702" fg:w="5"/><text x="85.4442%" y="351.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.61%)</title><rect x="85.1942%" y="325" width="0.6068%" height="15" fill="rgb(251,202,51)" fg:x="702" fg:w="5"/><text x="85.4442%" y="335.50"></text></g><g><title>std::sys_common::net::TcpStream::read (5 samples, 0.61%)</title><rect x="85.1942%" y="309" width="0.6068%" height="15" fill="rgb(254,216,34)" fg:x="702" fg:w="5"/><text x="85.4442%" y="319.50"></text></g><g><title>std::sys::unix::net::Socket::read (5 samples, 0.61%)</title><rect x="85.1942%" y="293" width="0.6068%" height="15" fill="rgb(251,32,27)" fg:x="702" fg:w="5"/><text x="85.4442%" y="303.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (5 samples, 0.61%)</title><rect x="85.1942%" y="277" width="0.6068%" height="15" fill="rgb(208,127,28)" fg:x="702" fg:w="5"/><text x="85.4442%" y="287.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.12%)</title><rect x="85.6796%" y="261" width="0.1214%" height="15" fill="rgb(224,137,22)" fg:x="706" fg:w="1"/><text x="85.9296%" y="271.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.12%)</title><rect x="85.6796%" y="245" width="0.1214%" height="15" fill="rgb(254,70,32)" fg:x="706" fg:w="1"/><text x="85.9296%" y="255.50"></text></g><g><title>&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (8 samples, 0.97%)</title><rect x="85.0728%" y="389" width="0.9709%" height="15" fill="rgb(229,75,37)" fg:x="701" fg:w="8"/><text x="85.3228%" y="399.50"></text></g><g><title>&lt;libp2p_tcp::provider::tokio::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (8 samples, 0.97%)</title><rect x="85.0728%" y="373" width="0.9709%" height="15" fill="rgb(252,64,23)" fg:x="701" fg:w="8"/><text x="85.3228%" y="383.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (7 samples, 0.85%)</title><rect x="85.1942%" y="357" width="0.8495%" height="15" fill="rgb(232,162,48)" fg:x="702" fg:w="7"/><text x="85.4442%" y="367.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.24%)</title><rect x="85.8010%" y="341" width="0.2427%" height="15" fill="rgb(246,160,12)" fg:x="707" fg:w="2"/><text x="86.0510%" y="351.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.24%)</title><rect x="85.8010%" y="325" width="0.2427%" height="15" fill="rgb(247,166,0)" fg:x="707" fg:w="2"/><text x="86.0510%" y="335.50"></text></g><g><title>&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (17 samples, 2.06%)</title><rect x="84.2233%" y="405" width="2.0631%" height="15" fill="rgb(249,219,21)" fg:x="694" fg:w="17"/><text x="84.4733%" y="415.50">&lt;..</text></g><g><title>[libc.so.6] (2 samples, 0.24%)</title><rect x="86.0437%" y="389" width="0.2427%" height="15" fill="rgb(205,209,3)" fg:x="709" fg:w="2"/><text x="86.2937%" y="399.50"></text></g><g><title>&lt;yamux::frame::io::Io&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (19 samples, 2.31%)</title><rect x="84.1019%" y="453" width="2.3058%" height="15" fill="rgb(243,44,1)" fg:x="693" fg:w="19"/><text x="84.3519%" y="463.50">&lt;..</text></g><g><title>&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (19 samples, 2.31%)</title><rect x="84.1019%" y="437" width="2.3058%" height="15" fill="rgb(206,159,16)" fg:x="693" fg:w="19"/><text x="84.3519%" y="447.50">&lt;..</text></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (18 samples, 2.18%)</title><rect x="84.2233%" y="421" width="2.1845%" height="15" fill="rgb(244,77,30)" fg:x="694" fg:w="18"/><text x="84.4733%" y="431.50">&lt;..</text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.12%)</title><rect x="86.2864%" y="405" width="0.1214%" height="15" fill="rgb(218,69,12)" fg:x="711" fg:w="1"/><text x="86.5364%" y="415.50"></text></g><g><title>&lt;asynchronous_codec::framed_write::FramedWrite2&lt;T&gt; as futures_sink::Sink&lt;&lt;T as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (1 samples, 0.12%)</title><rect x="86.4078%" y="421" width="0.1214%" height="15" fill="rgb(212,87,7)" fg:x="712" fg:w="1"/><text x="86.6578%" y="431.50"></text></g><g><title>bytes::bytes_mut::BytesMut::resize (1 samples, 0.12%)</title><rect x="86.5291%" y="405" width="0.1214%" height="15" fill="rgb(245,114,25)" fg:x="713" fg:w="1"/><text x="86.7791%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="86.5291%" y="389" width="0.1214%" height="15" fill="rgb(210,61,42)" fg:x="713" fg:w="1"/><text x="86.7791%" y="399.50"></text></g><g><title>&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_flush (4 samples, 0.49%)</title><rect x="86.4078%" y="453" width="0.4854%" height="15" fill="rgb(211,52,33)" fg:x="712" fg:w="4"/><text x="86.6578%" y="463.50"></text></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_flush (4 samples, 0.49%)</title><rect x="86.4078%" y="437" width="0.4854%" height="15" fill="rgb(234,58,33)" fg:x="712" fg:w="4"/><text x="86.6578%" y="447.50"></text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (3 samples, 0.36%)</title><rect x="86.5291%" y="421" width="0.3641%" height="15" fill="rgb(220,115,36)" fg:x="713" fg:w="3"/><text x="86.7791%" y="431.50"></text></g><g><title>snow::transportstate::TransportState::write_message (2 samples, 0.24%)</title><rect x="86.6505%" y="405" width="0.2427%" height="15" fill="rgb(243,153,54)" fg:x="714" fg:w="2"/><text x="86.9005%" y="415.50"></text></g><g><title>&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::encrypt (2 samples, 0.24%)</title><rect x="86.6505%" y="389" width="0.2427%" height="15" fill="rgb(251,47,18)" fg:x="714" fg:w="2"/><text x="86.9005%" y="399.50"></text></g><g><title>ring::aead::chacha20_poly1305::chacha20_poly1305_seal (2 samples, 0.24%)</title><rect x="86.6505%" y="373" width="0.2427%" height="15" fill="rgb(242,102,42)" fg:x="714" fg:w="2"/><text x="86.9005%" y="383.50"></text></g><g><title>&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_ready (1 samples, 0.12%)</title><rect x="86.8932%" y="453" width="0.1214%" height="15" fill="rgb(234,31,38)" fg:x="716" fg:w="1"/><text x="87.1432%" y="463.50"></text></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (1 samples, 0.12%)</title><rect x="86.8932%" y="437" width="0.1214%" height="15" fill="rgb(221,117,51)" fg:x="716" fg:w="1"/><text x="87.1432%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="86.8932%" y="421" width="0.1214%" height="15" fill="rgb(212,20,18)" fg:x="716" fg:w="1"/><text x="87.1432%" y="431.50"></text></g><g><title>_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$4grow17hf171c997ca3d7a2aE.llvm.7912103172253084985 (1 samples, 0.12%)</title><rect x="87.0146%" y="453" width="0.1214%" height="15" fill="rgb(245,133,36)" fg:x="717" fg:w="1"/><text x="87.2646%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.12%)</title><rect x="87.0146%" y="437" width="0.1214%" height="15" fill="rgb(212,6,19)" fg:x="717" fg:w="1"/><text x="87.2646%" y="447.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.12%)</title><rect x="87.1359%" y="453" width="0.1214%" height="15" fill="rgb(218,1,36)" fg:x="718" fg:w="1"/><text x="87.3859%" y="463.50"></text></g><g><title>&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll (32 samples, 3.88%)</title><rect x="83.8592%" y="501" width="3.8835%" height="15" fill="rgb(246,84,54)" fg:x="691" fg:w="32"/><text x="84.1092%" y="511.50">&lt;lib..</text></g><g><title>&lt;libp2p_yamux::Muxer&lt;C&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll (32 samples, 3.88%)</title><rect x="83.8592%" y="485" width="3.8835%" height="15" fill="rgb(242,110,6)" fg:x="691" fg:w="32"/><text x="84.1092%" y="495.50">&lt;lib..</text></g><g><title>yamux::connection::Connection&lt;T&gt;::poll_next_inbound (32 samples, 3.88%)</title><rect x="83.8592%" y="469" width="3.8835%" height="15" fill="rgb(214,47,5)" fg:x="691" fg:w="32"/><text x="84.1092%" y="479.50">yamu..</text></g><g><title>yamux::connection::rtt::Rtt::next_ping (4 samples, 0.49%)</title><rect x="87.2573%" y="453" width="0.4854%" height="15" fill="rgb(218,159,25)" fg:x="719" fg:w="4"/><text x="87.5073%" y="463.50"></text></g><g><title>std::sys::unix::time::Timespec::now (1 samples, 0.12%)</title><rect x="87.6214%" y="437" width="0.1214%" height="15" fill="rgb(215,211,28)" fg:x="722" fg:w="1"/><text x="87.8714%" y="447.50"></text></g><g><title>clock_gettime (1 samples, 0.12%)</title><rect x="87.6214%" y="421" width="0.1214%" height="15" fill="rgb(238,59,32)" fg:x="722" fg:w="1"/><text x="87.8714%" y="431.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.12%)</title><rect x="87.6214%" y="405" width="0.1214%" height="15" fill="rgb(226,82,3)" fg:x="722" fg:w="1"/><text x="87.8714%" y="415.50"></text></g><g><title>&lt;futures_timer::native::delay::Delay as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="87.7427%" y="485" width="0.1214%" height="15" fill="rgb(240,164,32)" fg:x="723" fg:w="1"/><text x="87.9927%" y="495.50"></text></g><g><title>&lt;libp2p_identify::protocol::Info as core::convert::TryFrom&lt;libp2p_identify::proto::structs::Identify&gt;&gt;::try_from (1 samples, 0.12%)</title><rect x="87.8641%" y="421" width="0.1214%" height="15" fill="rgb(232,46,7)" fg:x="724" fg:w="1"/><text x="88.1141%" y="431.50"></text></g><g><title>libp2p_identify::protocol::parse_public_key (1 samples, 0.12%)</title><rect x="87.8641%" y="405" width="0.1214%" height="15" fill="rgb(229,129,53)" fg:x="724" fg:w="1"/><text x="88.1141%" y="415.50"></text></g><g><title>libp2p_identity::keypair::PublicKey::try_decode_protobuf (1 samples, 0.12%)</title><rect x="87.8641%" y="389" width="0.1214%" height="15" fill="rgb(234,188,29)" fg:x="724" fg:w="1"/><text x="88.1141%" y="399.50"></text></g><g><title>&lt;libp2p_identity::keypair::PublicKey as core::convert::TryFrom&lt;libp2p_identity::proto::keys_proto::PublicKey&gt;&gt;::try_from (1 samples, 0.12%)</title><rect x="87.8641%" y="373" width="0.1214%" height="15" fill="rgb(246,141,4)" fg:x="724" fg:w="1"/><text x="88.1141%" y="383.50"></text></g><g><title>libp2p_identity::ed25519::PublicKey::try_from_bytes (1 samples, 0.12%)</title><rect x="87.8641%" y="357" width="0.1214%" height="15" fill="rgb(229,23,39)" fg:x="724" fg:w="1"/><text x="88.1141%" y="367.50"></text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::decompress (1 samples, 0.12%)</title><rect x="87.8641%" y="341" width="0.1214%" height="15" fill="rgb(206,12,3)" fg:x="724" fg:w="1"/><text x="88.1141%" y="351.50"></text></g><g><title>curve25519_dalek::edwards::decompress::step_1 (1 samples, 0.12%)</title><rect x="87.8641%" y="325" width="0.1214%" height="15" fill="rgb(252,226,20)" fg:x="724" fg:w="1"/><text x="88.1141%" y="335.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (1 samples, 0.12%)</title><rect x="87.8641%" y="309" width="0.1214%" height="15" fill="rgb(216,123,35)" fg:x="724" fg:w="1"/><text x="88.1141%" y="319.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (1 samples, 0.12%)</title><rect x="87.8641%" y="293" width="0.1214%" height="15" fill="rgb(212,68,40)" fg:x="724" fg:w="1"/><text x="88.1141%" y="303.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.12%)</title><rect x="87.8641%" y="277" width="0.1214%" height="15" fill="rgb(254,125,32)" fg:x="724" fg:w="1"/><text x="88.1141%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="87.9854%" y="421" width="0.1214%" height="15" fill="rgb(253,97,22)" fg:x="725" fg:w="1"/><text x="88.2354%" y="431.50"></text></g><g><title>&lt;quick_protobuf_codec::Codec&lt;In,Out&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (1 samples, 0.12%)</title><rect x="88.1068%" y="389" width="0.1214%" height="15" fill="rgb(241,101,14)" fg:x="726" fg:w="1"/><text x="88.3568%" y="399.50"></text></g><g><title>&lt;libp2p_identify::proto::structs::Identify as quick_protobuf::message::MessageRead&gt;::from_reader (1 samples, 0.12%)</title><rect x="88.1068%" y="373" width="0.1214%" height="15" fill="rgb(238,103,29)" fg:x="726" fg:w="1"/><text x="88.3568%" y="383.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="88.1068%" y="357" width="0.1214%" height="15" fill="rgb(233,195,47)" fg:x="726" fg:w="1"/><text x="88.3568%" y="367.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2 samples, 0.24%)</title><rect x="88.1068%" y="405" width="0.2427%" height="15" fill="rgb(246,218,30)" fg:x="726" fg:w="2"/><text x="88.3568%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="88.2282%" y="389" width="0.1214%" height="15" fill="rgb(219,145,47)" fg:x="727" fg:w="1"/><text x="88.4782%" y="399.50"></text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.61%)</title><rect x="87.8641%" y="453" width="0.6068%" height="15" fill="rgb(243,12,26)" fg:x="724" fg:w="5"/><text x="88.1141%" y="463.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.61%)</title><rect x="87.8641%" y="437" width="0.6068%" height="15" fill="rgb(214,87,16)" fg:x="724" fg:w="5"/><text x="88.1141%" y="447.50"></text></g><g><title>libp2p_identify::protocol::recv::_{{closure}} (3 samples, 0.36%)</title><rect x="88.1068%" y="421" width="0.3641%" height="15" fill="rgb(208,99,42)" fg:x="726" fg:w="3"/><text x="88.3568%" y="431.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="88.3495%" y="405" width="0.1214%" height="15" fill="rgb(253,99,2)" fg:x="728" fg:w="1"/><text x="88.5995%" y="415.50"></text></g><g><title>futures_bounded::futures_map::FuturesMap&lt;ID,O&gt;::poll_unpin (6 samples, 0.73%)</title><rect x="87.8641%" y="485" width="0.7282%" height="15" fill="rgb(220,168,23)" fg:x="724" fg:w="6"/><text x="88.1141%" y="495.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.73%)</title><rect x="87.8641%" y="469" width="0.7282%" height="15" fill="rgb(242,38,24)" fg:x="724" fg:w="6"/><text x="88.1141%" y="479.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (1 samples, 0.12%)</title><rect x="88.4709%" y="453" width="0.1214%" height="15" fill="rgb(225,182,9)" fg:x="729" fg:w="1"/><text x="88.7209%" y="463.50"></text></g><g><title>&lt;libp2p_identify::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (9 samples, 1.09%)</title><rect x="87.7427%" y="501" width="1.0922%" height="15" fill="rgb(243,178,37)" fg:x="723" fg:w="9"/><text x="87.9927%" y="511.50"></text></g><g><title>libp2p_identify::handler::Handler::handle_incoming_info (2 samples, 0.24%)</title><rect x="88.5922%" y="485" width="0.2427%" height="15" fill="rgb(232,139,19)" fg:x="730" fg:w="2"/><text x="88.8422%" y="495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.12%)</title><rect x="88.7136%" y="469" width="0.1214%" height="15" fill="rgb(225,201,24)" fg:x="731" fg:w="1"/><text x="88.9636%" y="479.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hef7cb73065d97329E.llvm.5765591108743647081 (1 samples, 0.12%)</title><rect x="88.7136%" y="453" width="0.1214%" height="15" fill="rgb(221,47,46)" fg:x="731" fg:w="1"/><text x="88.9636%" y="463.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="88.7136%" y="437" width="0.1214%" height="15" fill="rgb(249,23,13)" fg:x="731" fg:w="1"/><text x="88.9636%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="88.7136%" y="421" width="0.1214%" height="15" fill="rgb(219,9,5)" fg:x="731" fg:w="1"/><text x="88.9636%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="88.7136%" y="405" width="0.1214%" height="15" fill="rgb(254,171,16)" fg:x="731" fg:w="1"/><text x="88.9636%" y="415.50"></text></g><g><title>&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="89.1990%" y="421" width="0.1214%" height="15" fill="rgb(230,171,20)" fg:x="735" fg:w="1"/><text x="89.4490%" y="431.50"></text></g><g><title>&lt;quick_protobuf_codec::Codec&lt;In,Out&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (1 samples, 0.12%)</title><rect x="89.1990%" y="405" width="0.1214%" height="15" fill="rgb(210,71,41)" fg:x="735" fg:w="1"/><text x="89.4490%" y="415.50"></text></g><g><title>&lt;futures_util::stream::stream::into_future::StreamFuture&lt;St&gt; as core::future::future::Future&gt;::poll (7 samples, 0.85%)</title><rect x="89.0777%" y="453" width="0.8495%" height="15" fill="rgb(206,173,20)" fg:x="734" fg:w="7"/><text x="89.3277%" y="463.50"></text></g><g><title>&lt;libp2p_kad::handler::InboundSubstreamState as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.85%)</title><rect x="89.0777%" y="437" width="0.8495%" height="15" fill="rgb(233,88,34)" fg:x="734" fg:w="7"/><text x="89.3277%" y="447.50"></text></g><g><title>cfree (5 samples, 0.61%)</title><rect x="89.3204%" y="421" width="0.6068%" height="15" fill="rgb(223,209,46)" fg:x="736" fg:w="5"/><text x="89.5704%" y="431.50"></text></g><g><title>[libc.so.6] (5 samples, 0.61%)</title><rect x="89.3204%" y="405" width="0.6068%" height="15" fill="rgb(250,43,18)" fg:x="736" fg:w="5"/><text x="89.5704%" y="415.50"></text></g><g><title>[libc.so.6] (5 samples, 0.61%)</title><rect x="89.3204%" y="389" width="0.6068%" height="15" fill="rgb(208,13,10)" fg:x="736" fg:w="5"/><text x="89.5704%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="89.8058%" y="373" width="0.1214%" height="15" fill="rgb(212,200,36)" fg:x="740" fg:w="1"/><text x="90.0558%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="89.9272%" y="453" width="0.1214%" height="15" fill="rgb(225,90,30)" fg:x="741" fg:w="1"/><text x="90.1772%" y="463.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (9 samples, 1.09%)</title><rect x="89.0777%" y="469" width="1.0922%" height="15" fill="rgb(236,182,39)" fg:x="734" fg:w="9"/><text x="89.3277%" y="479.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (1 samples, 0.12%)</title><rect x="90.0485%" y="453" width="0.1214%" height="15" fill="rgb(212,144,35)" fg:x="742" fg:w="1"/><text x="90.2985%" y="463.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.12%)</title><rect x="90.0485%" y="437" width="0.1214%" height="15" fill="rgb(228,63,44)" fg:x="742" fg:w="1"/><text x="90.2985%" y="447.50"></text></g><g><title>&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 1.33%)</title><rect x="88.9563%" y="485" width="1.3350%" height="15" fill="rgb(228,109,6)" fg:x="733" fg:w="11"/><text x="89.2063%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="90.1699%" y="469" width="0.1214%" height="15" fill="rgb(238,117,24)" fg:x="743" fg:w="1"/><text x="90.4199%" y="479.50"></text></g><g><title>&lt;libp2p_kad::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (13 samples, 1.58%)</title><rect x="88.8350%" y="501" width="1.5777%" height="15" fill="rgb(242,26,26)" fg:x="732" fg:w="13"/><text x="89.0850%" y="511.50"></text></g><g><title>futures_bounded::futures_tuple_set::FuturesTupleSet&lt;O,D&gt;::poll_unpin (1 samples, 0.12%)</title><rect x="90.2913%" y="485" width="0.1214%" height="15" fill="rgb(221,92,48)" fg:x="744" fg:w="1"/><text x="90.5413%" y="495.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="90.2913%" y="469" width="0.1214%" height="15" fill="rgb(209,209,32)" fg:x="744" fg:w="1"/><text x="90.5413%" y="479.50"></text></g><g><title>_ZN10libp2p_kad7handler7Handler16queue_new_stream28_$u7b$$u7b$closure$u7d$$u7d$17h3b0e0c9ad1623ca5E.llvm.1669714546988672786 (1 samples, 0.12%)</title><rect x="90.2913%" y="453" width="0.1214%" height="15" fill="rgb(221,70,22)" fg:x="744" fg:w="1"/><text x="90.5413%" y="463.50"></text></g><g><title>&lt;asynchronous_codec::framed_write::FramedWrite2&lt;T&gt; as futures_sink::Sink&lt;&lt;T as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_flush (1 samples, 0.12%)</title><rect x="90.2913%" y="437" width="0.1214%" height="15" fill="rgb(248,145,5)" fg:x="744" fg:w="1"/><text x="90.5413%" y="447.50"></text></g><g><title>&lt;libp2p_swarm::stream::Stream as futures_io::if_std::AsyncWrite&gt;::poll_write (1 samples, 0.12%)</title><rect x="90.2913%" y="421" width="0.1214%" height="15" fill="rgb(226,116,26)" fg:x="744" fg:w="1"/><text x="90.5413%" y="431.50"></text></g><g><title>&lt;libp2p_core::muxing::boxed::SubstreamBox as futures_io::if_std::AsyncWrite&gt;::poll_write (1 samples, 0.12%)</title><rect x="90.2913%" y="405" width="0.1214%" height="15" fill="rgb(244,5,17)" fg:x="744" fg:w="1"/><text x="90.5413%" y="415.50"></text></g><g><title>&lt;libp2p_yamux::Stream as futures_io::if_std::AsyncWrite&gt;::poll_write (1 samples, 0.12%)</title><rect x="90.2913%" y="389" width="0.1214%" height="15" fill="rgb(252,159,33)" fg:x="744" fg:w="1"/><text x="90.5413%" y="399.50"></text></g><g><title>&lt;yamux::connection::stream::Stream as futures_io::if_std::AsyncWrite&gt;::poll_write (1 samples, 0.12%)</title><rect x="90.2913%" y="373" width="0.1214%" height="15" fill="rgb(206,71,0)" fg:x="744" fg:w="1"/><text x="90.5413%" y="383.50"></text></g><g><title>&lt;onion::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::on_connection_event (4 samples, 0.49%)</title><rect x="90.4126%" y="469" width="0.4854%" height="15" fill="rgb(233,118,54)" fg:x="745" fg:w="4"/><text x="90.6626%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="90.7767%" y="453" width="0.1214%" height="15" fill="rgb(234,83,48)" fg:x="748" fg:w="1"/><text x="91.0267%" y="463.50"></text></g><g><title>&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::on_connection_event (5 samples, 0.61%)</title><rect x="90.4126%" y="501" width="0.6068%" height="15" fill="rgb(228,3,54)" fg:x="745" fg:w="5"/><text x="90.6626%" y="511.50"></text></g><g><title>&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::on_connection_event (5 samples, 0.61%)</title><rect x="90.4126%" y="485" width="0.6068%" height="15" fill="rgb(226,155,13)" fg:x="745" fg:w="5"/><text x="90.6626%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="90.8981%" y="469" width="0.1214%" height="15" fill="rgb(241,28,37)" fg:x="749" fg:w="1"/><text x="91.1481%" y="479.50"></text></g><g><title>[libc.so.6] (4 samples, 0.49%)</title><rect x="91.0194%" y="501" width="0.4854%" height="15" fill="rgb(233,93,10)" fg:x="750" fg:w="4"/><text x="91.2694%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;libp2p_core::upgrade::select::SelectUpgrade&lt;libp2p_swarm::upgrade::SendWrapper&lt;libp2p_core::upgrade::select::SelectUpgrade&lt;libp2p_swarm::upgrade::SendWrapper&lt;onion::handler::IUpgrade&gt;,libp2p_swarm::upgrade::SendWrapper&lt;either::Either&lt;libp2p_kad::protocol::ProtocolConfig,libp2p_core::upgrade::denied::DeniedUpgrade&gt;&gt;&gt;&gt;,libp2p_swarm::upgrade::SendWrapper&lt;libp2p_core::upgrade::select::SelectUpgrade&lt;libp2p_core::upgrade::ready::ReadyUpgrade&lt;libp2p_swarm::stream_protocol::StreamProtocol&gt;,libp2p_core::upgrade::ready::ReadyUpgrade&lt;libp2p_swarm::stream_protocol::StreamProtocol&gt;&gt;&gt;&gt;&gt; (1 samples, 0.12%)</title><rect x="91.5049%" y="501" width="0.1214%" height="15" fill="rgb(225,113,19)" fg:x="754" fg:w="1"/><text x="91.7549%" y="511.50"></text></g><g><title>cfree (1 samples, 0.12%)</title><rect x="91.5049%" y="485" width="0.1214%" height="15" fill="rgb(241,2,18)" fg:x="754" fg:w="1"/><text x="91.7549%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="91.5049%" y="469" width="0.1214%" height="15" fill="rgb(228,207,21)" fg:x="754" fg:w="1"/><text x="91.7549%" y="479.50"></text></g><g><title>futures_timer::native::delay::Delay::new_handle (1 samples, 0.12%)</title><rect x="91.6262%" y="501" width="0.1214%" height="15" fill="rgb(213,211,35)" fg:x="755" fg:w="1"/><text x="91.8762%" y="511.50"></text></g><g><title>libp2p_swarm::connection::Connection&lt;THandler&gt;::poll (82 samples, 9.95%)</title><rect x="81.9175%" y="517" width="9.9515%" height="15" fill="rgb(209,83,10)" fg:x="675" fg:w="82"/><text x="82.1675%" y="527.50">libp2p_swarm::..</text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (1 samples, 0.12%)</title><rect x="91.7476%" y="501" width="0.1214%" height="15" fill="rgb(209,164,1)" fg:x="756" fg:w="1"/><text x="91.9976%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="91.7476%" y="485" width="0.1214%" height="15" fill="rgb(213,184,43)" fg:x="756" fg:w="1"/><text x="91.9976%" y="495.50"></text></g><g><title>&lt;T as libp2p_swarm::upgrade::InboundUpgradeSend&gt;::upgrade_inbound (2 samples, 0.24%)</title><rect x="91.8689%" y="501" width="0.2427%" height="15" fill="rgb(231,61,34)" fg:x="757" fg:w="2"/><text x="92.1189%" y="511.50"></text></g><g><title>[libc.so.6] (2 samples, 0.24%)</title><rect x="91.8689%" y="485" width="0.2427%" height="15" fill="rgb(235,75,3)" fg:x="757" fg:w="2"/><text x="92.1189%" y="495.50"></text></g><g><title>&lt;aes_gcm::AesGcm&lt;Aes,NonceSize,TagSize&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (1 samples, 0.12%)</title><rect x="92.1117%" y="485" width="0.1214%" height="15" fill="rgb(220,106,47)" fg:x="759" fg:w="1"/><text x="92.3617%" y="495.50"></text></g><g><title>&lt;aes::autodetect::Aes256 as cipher::block::BlockEncrypt&gt;::encrypt_with_backend::inner (1 samples, 0.12%)</title><rect x="92.1117%" y="469" width="0.1214%" height="15" fill="rgb(210,196,33)" fg:x="759" fg:w="1"/><text x="92.3617%" y="479.50"></text></g><g><title>_ZN16curve25519_dalek5field79_$LT$impl$u20$curve25519_dalek..backend..serial..u64..field..FieldElement51$GT$8pow2250117he14d124da6449f6dE.llvm.2766847636634604730 (1 samples, 0.12%)</title><rect x="92.2330%" y="421" width="0.1214%" height="15" fill="rgb(229,154,42)" fg:x="760" fg:w="1"/><text x="92.4830%" y="431.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.12%)</title><rect x="92.2330%" y="405" width="0.1214%" height="15" fill="rgb(228,114,26)" fg:x="760" fg:w="1"/><text x="92.4830%" y="415.50"></text></g><g><title>&lt;onion::handler::IUpgrade as libp2p_core::upgrade::InboundUpgrade&lt;libp2p_swarm::stream::Stream&gt;&gt;::upgrade_inbound::_{{closure}} (12 samples, 1.46%)</title><rect x="92.1117%" y="501" width="1.4563%" height="15" fill="rgb(208,144,1)" fg:x="759" fg:w="12"/><text x="92.3617%" y="511.50"></text></g><g><title>crypto::enc::KeyPair::decapsulate (11 samples, 1.33%)</title><rect x="92.2330%" y="485" width="1.3350%" height="15" fill="rgb(239,112,37)" fg:x="760" fg:w="11"/><text x="92.4830%" y="495.50"></text></g><g><title>x25519_dalek::x25519::StaticSecret::diffie_hellman (11 samples, 1.33%)</title><rect x="92.2330%" y="469" width="1.3350%" height="15" fill="rgb(210,96,50)" fg:x="760" fg:w="11"/><text x="92.4830%" y="479.50"></text></g><g><title>curve25519_dalek::montgomery::MontgomeryPoint::mul_clamped (11 samples, 1.33%)</title><rect x="92.2330%" y="453" width="1.3350%" height="15" fill="rgb(222,178,2)" fg:x="760" fg:w="11"/><text x="92.4830%" y="463.50"></text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (11 samples, 1.33%)</title><rect x="92.2330%" y="437" width="1.3350%" height="15" fill="rgb(226,74,18)" fg:x="760" fg:w="11"/><text x="92.4830%" y="447.50"></text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (10 samples, 1.21%)</title><rect x="92.3544%" y="421" width="1.2136%" height="15" fill="rgb(225,67,54)" fg:x="761" fg:w="10"/><text x="92.6044%" y="431.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (10 samples, 1.21%)</title><rect x="92.3544%" y="405" width="1.2136%" height="15" fill="rgb(251,92,32)" fg:x="761" fg:w="10"/><text x="92.6044%" y="415.50"></text></g><g><title>libp2p_swarm::connection::StreamUpgrade&lt;UserData,TOk,TErr&gt;::new_inbound::_{{closure}} (15 samples, 1.82%)</title><rect x="91.8689%" y="517" width="1.8204%" height="15" fill="rgb(228,149,22)" fg:x="757" fg:w="15"/><text x="92.1189%" y="527.50">l..</text></g><g><title>multistream_select::listener_select::listener_select_proto (1 samples, 0.12%)</title><rect x="93.5680%" y="501" width="0.1214%" height="15" fill="rgb(243,54,13)" fg:x="771" fg:w="1"/><text x="93.8180%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="93.5680%" y="485" width="0.1214%" height="15" fill="rgb(243,180,28)" fg:x="771" fg:w="1"/><text x="93.8180%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="93.5680%" y="469" width="0.1214%" height="15" fill="rgb(208,167,24)" fg:x="771" fg:w="1"/><text x="93.8180%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.12%)</title><rect x="93.5680%" y="453" width="0.1214%" height="15" fill="rgb(245,73,45)" fg:x="771" fg:w="1"/><text x="93.8180%" y="463.50"></text></g><g><title>&lt;multistream_select::protocol::Protocol as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (1 samples, 0.12%)</title><rect x="93.5680%" y="437" width="0.1214%" height="15" fill="rgb(237,203,48)" fg:x="771" fg:w="1"/><text x="93.8180%" y="447.50"></text></g><g><title>&lt;multistream_select::dialer_select::DialerSelectFuture&lt;R,I&gt; as core::future::future::Future&gt;::poll (3 samples, 0.36%)</title><rect x="93.6893%" y="501" width="0.3641%" height="15" fill="rgb(211,197,16)" fg:x="772" fg:w="3"/><text x="93.9393%" y="511.50"></text></g><g><title>&lt;multistream_select::protocol::MessageIO&lt;R&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="93.9320%" y="485" width="0.1214%" height="15" fill="rgb(243,99,51)" fg:x="774" fg:w="1"/><text x="94.1820%" y="495.50"></text></g><g><title>multistream_select::protocol::Message::decode (1 samples, 0.12%)</title><rect x="93.9320%" y="469" width="0.1214%" height="15" fill="rgb(215,123,29)" fg:x="774" fg:w="1"/><text x="94.1820%" y="479.50"></text></g><g><title>libp2p_swarm::connection::StreamUpgrade&lt;UserData,TOk,TErr&gt;::new_outbound::_{{closure}} (4 samples, 0.49%)</title><rect x="93.6893%" y="517" width="0.4854%" height="15" fill="rgb(239,186,37)" fg:x="772" fg:w="4"/><text x="93.9393%" y="527.50"></text></g><g><title>&lt;onion::handler::OUpgrade as libp2p_core::upgrade::OutboundUpgrade&lt;libp2p_swarm::stream::Stream&gt;&gt;::upgrade_outbound::_{{closure}} (1 samples, 0.12%)</title><rect x="94.0534%" y="501" width="0.1214%" height="15" fill="rgb(252,136,39)" fg:x="775" fg:w="1"/><text x="94.3034%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="94.0534%" y="485" width="0.1214%" height="15" fill="rgb(223,213,32)" fg:x="775" fg:w="1"/><text x="94.3034%" y="495.50"></text></g><g><title>libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::spawn_connection (1 samples, 0.12%)</title><rect x="94.1748%" y="517" width="0.1214%" height="15" fill="rgb(233,115,5)" fg:x="776" fg:w="1"/><text x="94.4248%" y="527.50"></text></g><g><title>libp2p_swarm::connection::Connection&lt;THandler&gt;::new (1 samples, 0.12%)</title><rect x="94.1748%" y="501" width="0.1214%" height="15" fill="rgb(207,226,44)" fg:x="776" fg:w="1"/><text x="94.4248%" y="511.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::new (1 samples, 0.12%)</title><rect x="94.1748%" y="485" width="0.1214%" height="15" fill="rgb(208,126,0)" fg:x="776" fg:w="1"/><text x="94.4248%" y="495.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="94.1748%" y="469" width="0.1214%" height="15" fill="rgb(244,66,21)" fg:x="776" fg:w="1"/><text x="94.4248%" y="479.50"></text></g><g><title>_ZN9pqc_kyber9reference3cbd4cbd217h7e9133af0c62a80aE.llvm.6003589252450693183 (5 samples, 0.61%)</title><rect x="94.2961%" y="501" width="0.6068%" height="15" fill="rgb(222,97,12)" fg:x="777" fg:w="5"/><text x="94.5461%" y="511.50"></text></g><g><title>pqc_kyber::reference::fips202::shake256 (6 samples, 0.73%)</title><rect x="94.9029%" y="501" width="0.7282%" height="15" fill="rgb(219,213,19)" fg:x="782" fg:w="6"/><text x="95.1529%" y="511.50"></text></g><g><title>_ZN9pqc_kyber9reference7fips20224keccakf1600_statepermute17hccba6e225936a416E.llvm.12410345712945867385 (6 samples, 0.73%)</title><rect x="94.9029%" y="485" width="0.7282%" height="15" fill="rgb(252,169,30)" fg:x="782" fg:w="6"/><text x="95.1529%" y="495.50"></text></g><g><title>pqc_kyber::reference::indcpa::gen_matrix (2 samples, 0.24%)</title><rect x="95.6311%" y="501" width="0.2427%" height="15" fill="rgb(206,32,51)" fg:x="788" fg:w="2"/><text x="95.8811%" y="511.50"></text></g><g><title>_ZN9pqc_kyber9reference7fips20224keccakf1600_statepermute17hccba6e225936a416E.llvm.12410345712945867385 (1 samples, 0.12%)</title><rect x="95.7524%" y="485" width="0.1214%" height="15" fill="rgb(250,172,42)" fg:x="789" fg:w="1"/><text x="96.0024%" y="495.50"></text></g><g><title>pqc_kyber::reference::polyvec::polyvec_basemul_acc_montgomery (8 samples, 0.97%)</title><rect x="95.8738%" y="501" width="0.9709%" height="15" fill="rgb(209,34,43)" fg:x="790" fg:w="8"/><text x="96.1238%" y="511.50"></text></g><g><title>pqc_kyber::reference::ntt::basemul (1 samples, 0.12%)</title><rect x="96.7233%" y="485" width="0.1214%" height="15" fill="rgb(223,11,35)" fg:x="797" fg:w="1"/><text x="96.9733%" y="495.50"></text></g><g><title>pqc_kyber::reference::polyvec::polyvec_compress (1 samples, 0.12%)</title><rect x="96.8447%" y="501" width="0.1214%" height="15" fill="rgb(251,219,26)" fg:x="798" fg:w="1"/><text x="97.0947%" y="511.50"></text></g><g><title>pqc_kyber::reference::indcpa::indcpa_enc (23 samples, 2.79%)</title><rect x="94.2961%" y="517" width="2.7913%" height="15" fill="rgb(231,119,3)" fg:x="777" fg:w="23"/><text x="94.5461%" y="527.50">pq..</text></g><g><title>pqc_kyber::reference::polyvec::polyvec_ntt (1 samples, 0.12%)</title><rect x="96.9660%" y="501" width="0.1214%" height="15" fill="rgb(216,97,11)" fg:x="799" fg:w="1"/><text x="97.2160%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (1 samples, 0.12%)</title><rect x="97.0874%" y="517" width="0.1214%" height="15" fill="rgb(223,59,9)" fg:x="800" fg:w="1"/><text x="97.3374%" y="527.50"></text></g><g><title>syscall (17 samples, 2.06%)</title><rect x="97.2087%" y="517" width="2.0631%" height="15" fill="rgb(233,93,31)" fg:x="801" fg:w="17"/><text x="97.4587%" y="527.50">s..</text></g><g><title>tokio::runtime::context::current::with_current (1 samples, 0.12%)</title><rect x="99.2718%" y="517" width="0.1214%" height="15" fill="rgb(239,81,33)" fg:x="818" fg:w="1"/><text x="99.5218%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (1 samples, 0.12%)</title><rect x="99.2718%" y="501" width="0.1214%" height="15" fill="rgb(213,120,34)" fg:x="818" fg:w="1"/><text x="99.5218%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="99.2718%" y="485" width="0.1214%" height="15" fill="rgb(243,49,53)" fg:x="818" fg:w="1"/><text x="99.5218%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1 samples, 0.12%)</title><rect x="99.3932%" y="517" width="0.1214%" height="15" fill="rgb(247,216,33)" fg:x="819" fg:w="1"/><text x="99.6432%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1 samples, 0.12%)</title><rect x="99.5146%" y="517" width="0.1214%" height="15" fill="rgb(226,26,14)" fg:x="820" fg:w="1"/><text x="99.7646%" y="527.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.12%)</title><rect x="99.6359%" y="517" width="0.1214%" height="15" fill="rgb(215,49,53)" fg:x="821" fg:w="1"/><text x="99.8859%" y="527.50"></text></g><g><title>[unknown] (452 samples, 54.85%)</title><rect x="45.0243%" y="533" width="54.8544%" height="15" fill="rgb(245,162,40)" fg:x="371" fg:w="452"/><text x="45.2743%" y="543.50">[unknown]</text></g><g><title>yamux::connection::Connection&lt;T&gt;::poll_next_inbound (1 samples, 0.12%)</title><rect x="99.7573%" y="517" width="0.1214%" height="15" fill="rgb(229,68,17)" fg:x="822" fg:w="1"/><text x="100.0073%" y="527.50"></text></g><g><title>&lt;yamux::frame::io::Io&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="99.7573%" y="501" width="0.1214%" height="15" fill="rgb(213,182,10)" fg:x="822" fg:w="1"/><text x="100.0073%" y="511.50"></text></g><g><title>&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="99.7573%" y="485" width="0.1214%" height="15" fill="rgb(245,125,30)" fg:x="822" fg:w="1"/><text x="100.0073%" y="495.50"></text></g><g><title>&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="99.7573%" y="469" width="0.1214%" height="15" fill="rgb(232,202,2)" fg:x="822" fg:w="1"/><text x="100.0073%" y="479.50"></text></g><g><title>&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="99.7573%" y="453" width="0.1214%" height="15" fill="rgb(237,140,51)" fg:x="822" fg:w="1"/><text x="100.0073%" y="463.50"></text></g><g><title>&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (1 samples, 0.12%)</title><rect x="99.7573%" y="437" width="0.1214%" height="15" fill="rgb(236,157,25)" fg:x="822" fg:w="1"/><text x="100.0073%" y="447.50"></text></g><g><title>snow::transportstate::TransportState::read_message (1 samples, 0.12%)</title><rect x="99.7573%" y="421" width="0.1214%" height="15" fill="rgb(219,209,0)" fg:x="822" fg:w="1"/><text x="100.0073%" y="431.50"></text></g><g><title>&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::decrypt (1 samples, 0.12%)</title><rect x="99.7573%" y="405" width="0.1214%" height="15" fill="rgb(240,116,54)" fg:x="822" fg:w="1"/><text x="100.0073%" y="415.50"></text></g><g><title>ring::aead::less_safe_key::open_within_ (1 samples, 0.12%)</title><rect x="99.7573%" y="389" width="0.1214%" height="15" fill="rgb(216,10,36)" fg:x="822" fg:w="1"/><text x="100.0073%" y="399.50"></text></g><g><title>ring::aead::chacha20_poly1305::chacha20_poly1305_open (1 samples, 0.12%)</title><rect x="99.7573%" y="373" width="0.1214%" height="15" fill="rgb(222,72,44)" fg:x="822" fg:w="1"/><text x="100.0073%" y="383.50"></text></g><g><title>chacha20_poly1305_open_avx2 (1 samples, 0.12%)</title><rect x="99.7573%" y="357" width="0.1214%" height="15" fill="rgb(232,159,9)" fg:x="822" fg:w="1"/><text x="100.0073%" y="367.50"></text></g><g><title>all (824 samples, 100%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(210,39,32)" fg:x="0" fg:w="824"/><text x="0.2500%" y="575.50"></text></g><g><title>tokio-runtime-w (707 samples, 85.80%)</title><rect x="14.1990%" y="549" width="85.8010%" height="15" fill="rgb(216,194,45)" fg:x="117" fg:w="707"/><text x="14.4490%" y="559.50">tokio-runtime-w</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.12%)</title><rect x="99.8786%" y="533" width="0.1214%" height="15" fill="rgb(218,18,35)" fg:x="823" fg:w="1"/><text x="100.1286%" y="543.50"></text></g></svg></svg>